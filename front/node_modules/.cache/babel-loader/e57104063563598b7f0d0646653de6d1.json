{"ast":null,"code":"var _jsxFileName = \"D:\\\\using_file\\\\co_op\\\\kingo\\\\front\\\\src\\\\components\\\\TotalPoint.js\",\n    _s = $RefreshSig$();\n\nimport { Text, HStack, Box, VStack } from \"@chakra-ui/react\";\nimport { useState, useEffect } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getRequest = jsons => {\n  return {\n    method: \"POST\",\n    header: {\n      \"Content-Type\": \"application/json\",\n      \"Access-Control-Allow-Origin\": \"*\",\n      \"Access-Control-Allow-Headers\": \"*\"\n    },\n    body: JSON.stringify(jsons)\n  };\n};\n\nfunction TotalPoint() {\n  _s();\n\n  const [pointArr, setPointArr] = useState([]);\n  const {\n    account\n  } = useWeb3React();\n  useEffect(() => {\n    //username를 생성하는 부분이 완성되면, 아래 fortest을 지우고 현재 로그인된 사용자의 username을 넣으면 됩니다. (성민)\n    let requestOpt = getRequest({\n      \"username\": account\n    });\n    fetch(\"http://localhost:5000/api/userInfo\", requestOpt).then(response => response.json()).then(jsons => {\n      setPointArr(pointArr.concat(jsons.pointA, jsons.pointB, jsons.pointC, jsons.pointD));\n    });\n  }, []);\n\n  const sumTotalPoint = () => {\n    let sumPoint = 0;\n\n    for (let i = 0; i < pointArr.length; i++) {\n      sumPoint += pointArr[i];\n    }\n\n    return sumPoint;\n  };\n\n  const sumPoint = sumTotalPoint();\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    justify: \"space-between\",\n    p: 5,\n    m: 3,\n    backgroundImage: \"linear-gradient(#532DFB,#868CFF)\",\n    w: \"full\",\n    h: \"204px\",\n    borderRadius: 15,\n    children: [/*#__PURE__*/_jsxDEV(HStack, {\n      w: \"full\",\n      justify: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        color: \"white\",\n        fontWeight: \"700\",\n        fontSize: \"3xl\",\n        children: \"\\uCD1D \\uBCF4\\uC720 \\uD3EC\\uC778\\uD2B8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HStack, {\n      w: \"full\",\n      justify: \"space-between\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        color: \"white\",\n        fontWeight: \"700\",\n        fontSize: \"5xl\",\n        children: [sumPoint, \" point\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TotalPoint, \"iqdkqMPlNPYd+Imhlb+XCHo2W4w=\", false, function () {\n  return [useWeb3React];\n});\n\n_c = TotalPoint;\nexport default TotalPoint;\n\nvar _c;\n\n$RefreshReg$(_c, \"TotalPoint\");","map":{"version":3,"sources":["D:/using_file/co_op/kingo/front/src/components/TotalPoint.js"],"names":["Text","HStack","Box","VStack","useState","useEffect","useWeb3React","getRequest","jsons","method","header","body","JSON","stringify","TotalPoint","pointArr","setPointArr","account","requestOpt","fetch","then","response","json","concat","pointA","pointB","pointC","pointD","sumTotalPoint","sumPoint","i","length"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,EAA4BC,MAA5B,QAA0C,kBAA1C;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,SAASC,YAAT,QAA6B,kBAA7B;;;AAGA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,SAAO;AACHC,IAAAA,MAAM,EAAE,MADL;AAEHC,IAAAA,MAAM,EAAE;AACJ,sBAAgB,kBADZ;AAEJ,qCAA+B,GAF3B;AAGJ,sCAAgC;AAH5B,KAFL;AAOHC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,KAAf;AAPH,GAAP;AASH,CAVD;;AAYA,SAASM,UAAT,GAAsB;AAAA;;AAClB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAACa,IAAAA;AAAD,MAAYX,YAAY,EAA9B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,QAAIa,UAAU,GAAGX,UAAU,CAAC;AAAC,kBAAWU;AAAZ,KAAD,CAA3B;AACAE,IAAAA,KAAK,CAAC,oCAAD,EAAuCD,UAAvC,CAAL,CACKE,IADL,CACWC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADxB,EAEKF,IAFL,CAEWZ,KAAD,IAAW;AACbQ,MAAAA,WAAW,CAACD,QAAQ,CAACQ,MAAT,CAAgBf,KAAK,CAACgB,MAAtB,EAA6BhB,KAAK,CAACiB,MAAnC,EAA0CjB,KAAK,CAACkB,MAAhD,EAAuDlB,KAAK,CAACmB,MAA7D,CAAD,CAAX;AACH,KAJL;AAKH,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMC,aAAa,GAAG,MAAM;AACxB,QAAIC,QAAQ,GAAG,CAAf;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGf,QAAQ,CAACgB,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtCD,MAAAA,QAAQ,IAAId,QAAQ,CAACe,CAAD,CAApB;AACH;;AACD,WAAOD,QAAP;AACH,GAND;;AAQA,QAAMA,QAAQ,GAAGD,aAAa,EAA9B;AAEA,sBACI,QAAC,MAAD;AACI,IAAA,OAAO,EAAC,eADZ;AAEI,IAAA,CAAC,EAAE,CAFP;AAGI,IAAA,CAAC,EAAE,CAHP;AAII,IAAA,eAAe,EAAC,kCAJpB;AAKI,IAAA,CAAC,EAAC,MALN;AAMI,IAAA,CAAC,EAAC,OANN;AAOI,IAAA,YAAY,EAAE,EAPlB;AAAA,4BASI,QAAC,MAAD;AAAQ,MAAA,CAAC,EAAC,MAAV;AAAiB,MAAA,OAAO,EAAC,eAAzB;AAAA,8BACI,QAAC,IAAD;AAAM,QAAA,KAAK,EAAC,OAAZ;AAAoB,QAAA,UAAU,EAAC,KAA/B;AAAqC,QAAA,QAAQ,EAAC,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAeI,QAAC,MAAD;AAAQ,MAAA,CAAC,EAAC,MAAV;AAAiB,MAAA,OAAO,EAAC,eAAzB;AAAA,8BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD;AAAM,QAAA,KAAK,EAAC,OAAZ;AAAoB,QAAA,UAAU,EAAC,KAA/B;AAAqC,QAAA,QAAQ,EAAC,KAA9C;AAAA,mBACKC,QADL;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;;GAhDQf,U;UAEaR,Y;;;KAFbQ,U;AAkDT,eAAeA,UAAf","sourcesContent":["import { Text, HStack, Box, VStack } from \"@chakra-ui/react\";\r\nimport {useState, useEffect} from \"react\"\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n\r\n\r\nconst getRequest = (jsons) => {\r\n    return {\r\n        method: \"POST\",\r\n        header: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Headers\": \"*\",\r\n        },\r\n        body: JSON.stringify(jsons),\r\n    };\r\n};\r\n\r\nfunction TotalPoint() {\r\n    const [pointArr, setPointArr] = useState([]);\r\n    const {account} = useWeb3React();\r\n\r\n    useEffect(() => {\r\n        //username를 생성하는 부분이 완성되면, 아래 fortest을 지우고 현재 로그인된 사용자의 username을 넣으면 됩니다. (성민)\r\n        let requestOpt = getRequest({\"username\":account});\r\n        fetch(\"http://localhost:5000/api/userInfo\", requestOpt)\r\n            .then((response) => response.json())\r\n            .then((jsons) => {\r\n                setPointArr(pointArr.concat(jsons.pointA,jsons.pointB,jsons.pointC,jsons.pointD));\r\n            });\r\n    }, [])\r\n\r\n    const sumTotalPoint = () => {\r\n        let sumPoint = 0\r\n        for (let i = 0; i < pointArr.length; i++) {\r\n            sumPoint += pointArr[i]\r\n        }\r\n        return sumPoint\r\n    }\r\n\r\n    const sumPoint = sumTotalPoint()\r\n\r\n    return (\r\n        <VStack\r\n            justify=\"space-between\"\r\n            p={5}\r\n            m={3}\r\n            backgroundImage=\"linear-gradient(#532DFB,#868CFF)\"\r\n            w=\"full\"\r\n            h=\"204px\"\r\n            borderRadius={15}\r\n        >\r\n            <HStack w=\"full\" justify=\"space-between\">\r\n                <Text color=\"white\" fontWeight=\"700\" fontSize=\"3xl\">\r\n                    총 보유 포인트\r\n                </Text>\r\n                <Box />\r\n            </HStack>\r\n            <HStack w=\"full\" justify=\"space-between\">\r\n                <Box />\r\n                <Text color=\"white\" fontWeight=\"700\" fontSize=\"5xl\">\r\n                    {sumPoint} point\r\n                </Text>\r\n            </HStack>\r\n        </VStack>\r\n    );\r\n}\r\n\r\nexport default TotalPoint;\r\n"]},"metadata":{},"sourceType":"module"}