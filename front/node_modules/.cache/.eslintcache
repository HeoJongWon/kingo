[{"/Users/jongwon/github/kingo/front/src/index.js":"1","/Users/jongwon/github/kingo/front/src/App.js":"2","/Users/jongwon/github/kingo/front/src/components/Navbar.js":"3","/Users/jongwon/github/kingo/front/src/library/index.js":"4","/Users/jongwon/github/kingo/front/src/pages/DashBoard.js":"5","/Users/jongwon/github/kingo/front/src/pages/MyTransactions.js":"6","/Users/jongwon/github/kingo/front/src/pages/Login.js":"7","/Users/jongwon/github/kingo/front/src/pages/AllTransactions.js":"8","/Users/jongwon/github/kingo/front/src/pages/AdminPage.js":"9","/Users/jongwon/github/kingo/front/src/components/TotalPoint.js":"10","/Users/jongwon/github/kingo/front/src/components/PointPieChart.js":"11","/Users/jongwon/github/kingo/front/src/components/AccountInfo.js":"12","/Users/jongwon/github/kingo/front/src/components/MyTransactionsReceive.js":"13","/Users/jongwon/github/kingo/front/src/components/MyTransactionsSend.js":"14","/Users/jongwon/github/kingo/front/src/components/TransactionsChart.js":"15","/Users/jongwon/github/kingo/front/src/components/LatestBlocks.js":"16","/Users/jongwon/github/kingo/front/src/components/MyTransactionsAll.js":"17","/Users/jongwon/github/kingo/front/src/components/PointStatus.js":"18","/Users/jongwon/github/kingo/front/src/components/WalletConnect.js":"19","/Users/jongwon/github/kingo/front/src/components/LatestTransactions.js":"20","/Users/jongwon/github/kingo/front/src/connector/index.js":"21"},{"size":496,"mtime":1641517576742,"results":"22","hashOfConfig":"23"},{"size":2061,"mtime":1641538924629,"results":"24","hashOfConfig":"23"},{"size":4757,"mtime":1641517576741,"results":"25","hashOfConfig":"23"},{"size":225,"mtime":1641517576742,"results":"26","hashOfConfig":"23"},{"size":971,"mtime":1641517576742,"results":"27","hashOfConfig":"23"},{"size":2951,"mtime":1641517576742,"results":"28","hashOfConfig":"23"},{"size":132,"mtime":1641517576742,"results":"29","hashOfConfig":"23"},{"size":2313,"mtime":1641517576742,"results":"30","hashOfConfig":"23"},{"size":8310,"mtime":1641517576742,"results":"31","hashOfConfig":"23"},{"size":1815,"mtime":1641539257946,"results":"32","hashOfConfig":"23"},{"size":2160,"mtime":1641539221143,"results":"33","hashOfConfig":"23"},{"size":1635,"mtime":1641517576741,"results":"34","hashOfConfig":"23"},{"size":2873,"mtime":1641535022545,"results":"35","hashOfConfig":"23"},{"size":2929,"mtime":1641535015295,"results":"36","hashOfConfig":"23"},{"size":954,"mtime":1641517576742,"results":"37","hashOfConfig":"23"},{"size":997,"mtime":1641517576741,"results":"38","hashOfConfig":"23"},{"size":3125,"mtime":1641534943279,"results":"39","hashOfConfig":"23"},{"size":2075,"mtime":1641539239983,"results":"40","hashOfConfig":"23"},{"size":1309,"mtime":1641517576742,"results":"41","hashOfConfig":"23"},{"size":3369,"mtime":1641535597222,"results":"42","hashOfConfig":"23"},{"size":269,"mtime":1641517576742,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1ozkrmi",{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"46"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/Users/jongwon/github/kingo/front/src/index.js",[],["97","98"],"/Users/jongwon/github/kingo/front/src/App.js",[],"/Users/jongwon/github/kingo/front/src/components/Navbar.js",[],"/Users/jongwon/github/kingo/front/src/library/index.js",[],"/Users/jongwon/github/kingo/front/src/pages/DashBoard.js",["99","100","101","102"],"import {\n    HStack,\n    Text,\n    VStack,\n    Flex,\n    Box,\n    useMediaQuery,\n} from \"@chakra-ui/react\";\nimport TotalPoint from \"../components/TotalPoint\";\nimport PointStatus from \"../components/PointStatus\";\nimport PointPieChart from \"../components/PointPieChart\";\nimport AccountInfo from \"../components/AccountInfo\";\n\nfunction DashBoard() {\n    const [isLessThan1070] = useMediaQuery(\"(max-width:1070px)\");\n    return (\n        <Flex wrap=\"wrap\" w=\"full\" h=\"full\" justify=\"space-evenly\" bg=\"#E5E5E5\">\n            <Flex\n                flexGrow=\"1\"\n                justify=\"space-between\"\n                p={5}\n                wrap=\"wrap\"\n                minW=\"350px\"\n                w={isLessThan1070 ? \"full\" : \"60%\"}\n            >\n                <TotalPoint />\n                <PointStatus />\n                <AccountInfo />\n                <PointPieChart />\n                <PointStatus />\n            </Flex>\n        </Flex>\n    );\n}\n\nexport default DashBoard;\n","/Users/jongwon/github/kingo/front/src/pages/MyTransactions.js",["103","104"],"import { Flex, HStack, Text, VStack, Box } from \"@chakra-ui/layout\";\nimport { useState } from \"react\";\nimport MyTransactionsAll from \"../components/MyTransactionsAll\";\nimport MyTransactionsSend from \"../components/MyTransactionsSend\";\nimport MyTransactionsReceive from \"../components/MyTransactionsReceive\";\nimport TransactionsChart from \"../components/TransactionsChart\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nfunction MySelect({ select }) {\n    if (select === 2) {\n        return <MyTransactionsReceive/>;\n    } else if (select === 1) {\n        return <MyTransactionsSend/>;\n    } else {\n        return <MyTransactionsAll/>;\n    }\n}\n\nfunction MyTransactions() {\n\n    const [index, setIndex] = useState(0);\n    \n\n    return (\n        <Flex m={10} flexDirection=\"column\" w=\"full\">\n            <Text fontSize=\"3xl\" fontWeight=\"700\">\n                My 거래내역\n            </Text>\n            <VStack\n                w=\"full\"\n                backgroundColor=\"white\"\n                borderRadius=\"5px\"\n                p={5}\n                marginBottom={5}\n                marginTop={5}\n                borderRadius={20}\n            >\n                <TransactionsChart />\n            </VStack>\n            <HStack>\n                <Box\n                    as=\"button\"\n                    backgroundColor={index === 0 ? \"#4318FF\" : \"white\"}\n                    color={index === 0 ? \"white\" : \"black\"}\n                    borderRadius=\"3px\"\n                    width=\"60px\"\n                    fontWeight=\"bold\"\n                    onClick={() => {\n                        setIndex(0);\n                    }}\n                >\n                    ALL\n                </Box>\n                <Box\n                    as=\"button\"\n                    backgroundColor={index === 1 ? \"#4318FF\" : \"white\"}\n                    color={index === 1 ? \"white\" : \"black\"}\n                    borderRadius=\"3px\"\n                    width=\"60px\"\n                    fontWeight=\"bold\"\n                    onClick={() => {\n                        setIndex(1);\n                    }}\n                >\n                    보낸 내역\n                </Box>\n                <Box\n                    as=\"button\"\n                    backgroundColor={index === 2 ? \"#4318FF\" : \"white\"}\n                    color={index === 2 ? \"white\" : \"black\"}\n                    borderRadius=\"3px\"\n                    width=\"60px\"\n                    fontWeight=\"bold\"\n                    onClick={() => {\n                        setIndex(2);\n                    }}\n                >\n                    받은 내역\n                </Box>\n            </HStack>\n\n            <VStack\n                w=\"full\"\n                backgroundColor=\"white\"\n                borderRadius={20}\n                p={5}\n                marginTop={5}\n            >\n                <MySelect select={index}/>\n            </VStack>\n        </Flex>\n    );\n}\n\nexport default MyTransactions;\n","/Users/jongwon/github/kingo/front/src/pages/Login.js",[],"/Users/jongwon/github/kingo/front/src/pages/AllTransactions.js",["105","106","107","108"],"import { Flex, HStack, Text, VStack, Box } from \"@chakra-ui/layout\";\nimport LatestBlock from \"../components/LatestBlocks\";\nimport LatestTransactions from \"../components/LatestTransactions\";\nimport {useEffect, useState} from 'react';\n\n\n\n\nfunction AllTransactions() {\n    \n    return (\n        <Flex m={10} flexDirection=\"column\" w=\"full\">\n            <Text fontSize=\"3xl\" fontWeight=\"700\">\n                전체 거래내역\n            </Text>\n\n            {/* 그래프 */}\n\n            <VStack\n                w=\"full\"\n                backgroundColor=\"white\"\n                borderRadius=\"5px\"\n                p={5}\n                marginTop={5}\n                borderRadius={20}\n            >\n                <HStack justifyContent=\"space-between\" w=\"full\">\n                    <Text color=\"#4318FF\" fontWeight={700} fontSize=\"lg\">\n                        Latest Blocks\n                    </Text>\n                    <Box\n                        as=\"button\"\n                        backgroundColor=\"#4318FF\"\n                        color=\"white\"\n                        borderRadius=\"3px\"\n                        width=\"60px\"\n                        fontWeight=\"bold\"\n                    >\n                        + More\n                    </Box>\n                </HStack>\n\n                <LatestBlock />\n            </VStack>\n\n            <VStack\n                w=\"full\"\n                backgroundColor=\"white\"\n                borderRadius=\"5px\"\n                p={5}\n                marginTop={5}\n                borderRadius={20}\n            >\n                <HStack justifyContent=\"space-between\" w=\"full\">\n                    <Text color=\"#4318FF\" fontWeight={700} fontSize=\"lg\">\n                        Latest Transaction\n                    </Text>\n                    <Box\n                        as=\"button\"\n                        backgroundColor=\"#4318FF\"\n                        color=\"white\"\n                        borderRadius=\"3px\"\n                        width=\"60px\"\n                        fontWeight=\"bold\"\n                    >\n                        + More\n                    </Box>\n                </HStack>\n\n                <LatestTransactions \n                />\n            </VStack>\n\n            {/* 거래내역 */}\n        </Flex>\n    );\n}\n\nexport default AllTransactions;\n","/Users/jongwon/github/kingo/front/src/pages/AdminPage.js",["109","110","111","112","113","114","115","116","117"],"import {\n    Flex,\n    HStack,\n    Text,\n    VStack,\n    Box,\n    Input,\n    Button,\n    FormControl,\n    FormLabel,\n    FormErrorMessage,\n    FormHelperText,\n} from \"@chakra-ui/react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport WalletConnect from \"../components/WalletConnect\";\nimport moment from \"moment\";\nimport {useState} from \"react\"\n\nfunction AdminPage() {\n    const { library, account } = useWeb3React();\n    const signer = library?.getSigner(account).connectUnchecked();\n    const [input, setInput] = useState([])\n\n    const handleCreateTransaction = (event) => {\n        const from = event.target.parentElement.parentElement.children[1].value\n        const to = event.target.parentElement.parentElement.children[3].value\n        const point = event.target.parentElement.parentElement.children[5].value\n        const type = event.target.parentElement.parentElement.children[7].value\n        const hash = event.target.parentElement.parentElement.children[9].value\n        let m = moment().format(\"YYYY.MM.DD\");\n        fetch(\"http://localhost:5000/api/createTx/\", {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/json',\n                \"Access-Control-Allow-Origin\":\"*\",\n                'Access-Control-Allow-Headers':\"*\"    \n            },\n            body:JSON.stringify({\n                from : from, \n                to : to,\n                point : point,\n                type : type,\n                date : m,\n                hash : hash,\n            })\n          }).then(res => {\n              if (res.ok){\n                console.log(\"Successfully added Transaction\");\n              }\n          }\n          )\n    };\n\n    const handleCreateUserInfo = (event) => {\n        /*console.log(event.target.parentElement.children[1].value);\n        console.log(event.target.parentElement.children[3].value);\n        console.log(event.target.parentElement.children[5].value);*/\n        const id = event.target.parentElement.children[1].value\n        const password = event.target.parentElement.children[3].value\n        const email = event.target.parentElement.children[5].value\n        fetch(\"http://localhost:5000/api/createUser/\", {\n            method: 'POST',\n            headers: {\n                'Content-Type':'application/json',\n                \"Access-Control-Allow-Origin\":\"*\",\n                'Access-Control-Allow-Headers':\"*\"    \n            },\n            body: JSON.stringify({\n              id: id,\n              password: password,\n              email: email,\n            })\n          }).then(res => {\n              if (res.ok){\n                console.log(\"Successfully added user\");\n              }\n          }\n          )            \n    };\n\n    const handleDemo = () => {\n        let hash;\n        let m = moment().format(\"YYYY.MM.DD\");\n        const message = JSON.stringify({\n            from: account,\n            to: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n            point: 100,\n            type: \"A\",\n            date: m,\n        });\n\n        signer.signMessage(message).then((result) => (hash = result));\n        // 밑의 주석 이용하면 demo send 가능 \n        // const send_message = JSON.stringify({\n        //     from: account,\n        //     to: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\n        //     type: \"A\",\n        //     value: 100,\n        // });\n        // signer.signMessage(send_message).then((result) => (hash = result));\n        // // 위의 hash 이용해서 Create transaction 보내면 됨\n        // fetch(\"http://localhost:5000/api/createTx/\", {\n        //     method:'POST',\n        //     header:{\n        //         'Content-Type':'application/json',\n        //         \"Access-Control-Allow-Origin\":\"*\",\n        //         'Access-Control-Allow-Headers':\"*\"                \n        //     },\n        //     body:JSON.send_message\n            \n        // }).then(() => {\n        //     console.log(\"added\");\n        // }\n        // )\n    };\n\n    \n\n\n    return (\n        <Flex m={10} flexDirection=\"column\" w=\"full\">\n            <Text fontSize=\"3xl\" fontWeight=\"700\">\n                관리자 페이지\n            </Text>\n\n            <VStack\n                w=\"full\"\n                backgroundColor=\"white\"\n                borderRadius=\"5px\"\n                p={5}\n                marginTop={5}\n                borderRadius={20}\n            >\n                <HStack justifyContent=\"space-between\" w=\"full\">\n                    <Text color=\"#4318FF\" fontWeight={700} fontSize=\"lg\">\n                        트랜잭션 생성\n                    </Text>\n                </HStack>\n                <FormControl id=\"transaction-create\">\n                    <FormLabel>From</FormLabel>\n                    <Input placeholder=\"ex) Alice\" />\n                    <FormLabel>To</FormLabel>\n                    <Input placeholder=\"ex) Bob\" />\n                    <FormLabel>Point</FormLabel>\n                    <Input placeholder=\"ex) 300\" />\n                    <FormLabel>Type</FormLabel>\n                    <Input placeholder=\"ex) A\" />\n                    <FormLabel>Hash</FormLabel>\n                    <Input placeholder=\"Hash Value\" />\n                    <Button\n                        type=\"submit\"\n                        onClick={handleCreateTransaction}\n                        h=\"40px\"\n                        borderRadius={20}\n                        w=\"200px\"\n                        bg=\"#4318FF\"\n                        color=\"white\"\n                        fontSize=\"sm\"\n                        fontWeight=\"bold\"\n                        mt={5}\n                    >\n                        <Text>트랜잭션 생성하기</Text>\n                    </Button>\n                </FormControl>\n            </VStack>\n            <VStack\n                w=\"full\"\n                backgroundColor=\"white\"\n                borderRadius=\"5px\"\n                p={5}\n                marginTop={5}\n                borderRadius={20}\n            >\n                <HStack justifyContent=\"space-between\" w=\"full\">\n                    <Text color=\"#4318FF\" fontWeight={700} fontSize=\"lg\">\n                        유저 정보 생성\n                    </Text>\n                </HStack>\n                <FormControl id=\"transaction-create\">\n                    <FormLabel>User ID</FormLabel>\n                    <Input placeholder=\"Enter user ID\" />\n                    <FormLabel>User Pw</FormLabel>\n                    <Input placeholder=\"Enter user Password\" />\n                    <FormLabel>User Email</FormLabel>\n                    <Input placeholder=\"Enter user Email\" />\n                    <Button\n                        type=\"submit\"\n                        onClick={handleCreateUserInfo}\n                        h=\"40px\"\n                        borderRadius={20}\n                        w=\"200px\"\n                        bg=\"#4318FF\"\n                        color=\"white\"\n                        fontSize=\"sm\"\n                        fontWeight=\"bold\"\n                        mt={5}\n                    >\n                        <Text>유저 정보 생성하기</Text>\n                    </Button>\n                </FormControl>\n            </VStack>\n            <VStack\n                w=\"full\"\n                backgroundColor=\"white\"\n                borderRadius=\"5px\"\n                p={5}\n                marginTop={5}\n                borderRadius={20}\n                align=\"flex-start\"\n            >\n                <HStack justifyContent=\"space-between\" w=\"full\">\n                    <Text color=\"#4318FF\" fontWeight={700} fontSize=\"lg\">\n                        Demo\n                    </Text>\n                </HStack>\n                <Text fontSize=\"lg\">A에게 100포인트 보내기</Text>\n                <WalletConnect />\n                <Button\n                    type=\"submit\"\n                    onClick={handleDemo}\n                    h=\"40px\"\n                    borderRadius={20}\n                    w=\"200px\"\n                    bg=\"#4318FF\"\n                    color=\"white\"\n                    fontSize=\"sm\"\n                    fontWeight=\"bold\"\n                    mt={5}\n                >\n                    <Text>Demo 실행</Text>\n                </Button>\n            </VStack>\n        </Flex>\n    );\n}\n\nexport default AdminPage;","/Users/jongwon/github/kingo/front/src/components/TotalPoint.js",["118"],"/Users/jongwon/github/kingo/front/src/components/PointPieChart.js",["119","120"],"/Users/jongwon/github/kingo/front/src/components/AccountInfo.js",["121"],"import {\n    VStack,\n    Box,\n    Flex,\n    Text,\n    Button,\n    Link,\n    useMediaQuery,\n    Tooltip,\n} from \"@chakra-ui/react\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nfunction AccountInfo() {\n    const [isLessThan1195] = useMediaQuery(\"(max-width:1195px)\");\n    const { account } = useWeb3React();\n    const parseAccount =\n        account &&\n        account?.substring(0, 10) + \"...\" + account?.substring(32, 40);\n\n    const etherscanAccount = \"https://etherscan.io/address/\" + account;\n\n    const parseAccountForColor = \"#\" + account?.substring(2, 8);\n    console.log(parseAccountForColor);\n    return (\n        <VStack\n            borderRadius={15}\n            bg=\"white\"\n            p={10}\n            h=\"355px\"\n            w={isLessThan1195 ? \"full\" : \"45%\"}\n            m={3}\n            justify=\"center\"\n            spacing={5}\n        >\n            <Flex\n                backgroundColor={parseAccountForColor}\n                borderRadius={100}\n                w=\"110px\"\n                h=\"110px\"\n                align=\"center\"\n                justify=\"center\"\n                fontFamily=\"'Pacifico', cursive\"\n                fontSize=\"3xl\"\n            >\n                {account?.substring(2, 6)}\n            </Flex>\n            <Text fontSize=\"lg\">내 지갑 주소 : </Text>\n            <Tooltip label={account}>\n                <Text>{parseAccount}</Text>\n            </Tooltip>\n            {account && (\n                <Button as={Link} isExternal href={etherscanAccount}>\n                    View on Etherscan\n                </Button>\n            )}\n        </VStack>\n    );\n}\n\nexport default AccountInfo;\n","/Users/jongwon/github/kingo/front/src/components/MyTransactionsReceive.js",["122","123","124","125","126","127"],"import styled from \"styled-components\";\nimport kakaoTalk from \"../assets/kakaoTalk.png\";\nimport { HStack, Text } from \"@chakra-ui/layout\";\nimport { useState, useEffect } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport axios from 'axios';\n\nconst Table = styled.table`\n  width: 100%;\n`;\n\nconst Td = styled.td`\n  text-align: center;\n  padding: 5px;\n`;\n\nconst Th = styled.th`\n  font-weight: 800;\n  color: #4318ff;\n  text-align: center;\n  border-bottom: 2px solid #4318ff;\n`;\n\nconst Icon = styled.img`\n  src: ${(props) => props.src};\n  width: 20px;\n  margin-left: 10px;\n`;\n\nconst Time = styled.td`\n  color: #aeb4c4;\n  text-align: center;\n`;\n\n\nexport default function MyTransactionsAll() {\n  const [fromListState, setFromListState] = useState([\"Not Found\"]);\n  const [toListState, setToListState] = useState([\"Not Found\"]);\n  const [typeListState, setTypeListState] = useState([\"Not Found\"]);\n  const [valueListState, setValueListState] = useState([\"Not Found\"]);\n  const [dateListState, setDateListState] = useState([\"Not Found\"]);\n  const [hashListState, setHashListState] = useState([\"Not Found\"]);\n\n  const {account} = useWeb3React();\n\n  useEffect(() =>{\n    const fromList = [];\n    const toList = [];\n    const typeList = [];\n    const valueList = [];\n    const dateList = [];\n    const hashList = [];\n    axios.get(\"http://localhost:5000/api/viewAll\").then(function(response){\n      for (let i = 1; i <= response.data.length; i++) {\n        if (response.data[i]?._to == account) {\n          console.log(response.data);\n          fromList.push(response.data[i]._from);\n          typeList.push(response.data[i]._type);\n          valueList.push(response.data[i]._point);\n          dateList.push(response.data[i]._date);\n          hashList.push(response.data[i]._hash);\n        }\n      }\n      setFromListState(fromList);\n      setTypeListState(typeList);\n      setValueListState(valueList);\n      setDateListState(dateList);\n      setHashListState(hashList)\n    }) \n  },[])\n  const createTransactionTable = () => {\n    const displayedTable = [];\n    for(let i = 0; i < valueListState.length; i++) {\n      displayedTable.push(\n        <tr>\n          <Td>\n            <HStack justifyContent=\"center\">\n              <Icon src={kakaoTalk} />\n              <Text>kakaoPay</Text>\n            </HStack>\n          </Td>\n          <Time>{dateListState[i]}</Time>\n          <Td>{fromListState[i]}</Td>\n          <Td>{valueListState[i]}</Td>\n          <Td>{hashListState[i]}</Td>\n        </tr>\n      )\n    }\n    return(\n      <Table>\n      <thead>\n        <tr>\n          <Th>플랫폼</Th>\n          <Th>시간</Th>\n          <Th>FROM</Th>\n          <Th>금액</Th>\n          <Th>HASH</Th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {displayedTable}\n      </tbody>\n    </Table>\n    )\n  }\n\n  return (\n    <>\n      {createTransactionTable()}\n    </>\n  );\n}\n","/Users/jongwon/github/kingo/front/src/components/MyTransactionsSend.js",["128","129","130","131","132","133"],"import styled from \"styled-components\";\nimport kakaoTalk from \"../assets/kakaoTalk.png\";\nimport { HStack, Text } from \"@chakra-ui/layout\";\nimport { useState, useEffect } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport axios from 'axios';\n\nconst Table = styled.table`\n  width: 100%;\n`;\n\nconst Td = styled.td`\n  text-align: center;\n  padding: 5px;\n`;\n\nconst Th = styled.th`\n  font-weight: 800;\n  color: #4318ff;\n  text-align: center;\n  border-bottom: 2px solid #4318ff;\n`;\n\nconst Icon = styled.img`\n  src: ${(props) => props.src};\n  width: 20px;\n  margin-left: 10px;\n`;\n\nconst Time = styled.td`\n  color: #aeb4c4;\n  text-align: center;\n`;\n\n\nexport default function MyTransactionsAll() {\n  const [fromListState, setFromListState] = useState([\"Not Found\"]);\n  const [toListState, setToListState] = useState([\"Not Found\"]);\n  const [typeListState, setTypeListState] = useState([\"Not Found\"]);\n  const [valueListState, setValueListState] = useState([\"Not Found\"]);\n  const [dateListState, setDateListState] = useState([\"Not Found\"]);\n  const [hashListState, setHashListState] = useState([\"Not Found\"]);\n  \n  const {account} = useWeb3React();\n\n  useEffect(() => {\n    const fromList = [];\n    const toList = [];\n    const typeList = [];\n    const valueList = [];\n    const dateList = [];\n    const hashList = [];\n    axios.get(\"http://localhost:5000/api/viewAll\").then(function(response){\n          console.log(response.data);\n          for(let i = 1; i <= response.data.length; i++) {\n            if(response.data[i]?._from == account) {\n              toList.push(response.data[i].__type);\n              valueList.push(response.data[i]._to);\n              typeList.push(response.data[i].point);\n              dateList.push(response.data[i]._date);\n              hashList.push(response.data[i]._hash);\n            }\n          }\n          setToListState(toList);\n          setTypeListState(typeList);\n          setValueListState(valueList);\n          setDateListState(dateList);\n          setHashListState(hashList);\n        });\n    }, [])\n\n  const createTransactionTable = () => {\n    const displayedTable = [];\n    for(let i = 0; i < valueListState.length; i++) {\n      displayedTable.push(\n        <tr>\n          <Td>\n            <HStack justifyContent=\"center\">\n              <Icon src={kakaoTalk} />\n              <Text>kakaoPay</Text>\n            </HStack>\n          </Td>\n          <Time>{dateListState[i]}</Time>\n          <Td>{toListState[i]}</Td>\n          <Td>{valueListState[i]}</Td>\n          <Td>{hashListState[i]}</Td>\n        </tr>\n      )\n    }\n    return(\n      <Table>\n      <thead>\n        <tr>\n          <Th>플랫폼</Th>\n          <Th>시간</Th>\n          <Th>TO</Th>\n          <Th>금액</Th>\n          <Th>HASH</Th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {displayedTable}\n      </tbody>\n    </Table>\n    )\n  }\n\n  return (\n    <>\n      {createTransactionTable()}\n    </>\n  );\n}\n","/Users/jongwon/github/kingo/front/src/components/TransactionsChart.js",["134","135","136"],"import { useState } from \"react\";\nimport {\n    LineChart,\n    Line,\n    Tooltip,\n    YAxis,\n    XAxis,\n    CartesianGrid,\n    ResponsiveContainer,\n} from \"recharts\";\nimport data from \"../assets/data.json\";\n\nexport default function TransactionsChart() {\n    return (\n        <ResponsiveContainer width=\"95%\" height={180} debounce={1}>\n            <LineChart\n                data={data}\n                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n            >\n                <YAxis />\n                <Tooltip\n                    itemStyle={{ fontSize: \"5px\" }}\n                    contentStyle={{ fontSize: \"0px\" }}\n                    wrapperStyle={{ padding: 0, border: \"none\" }}\n                />\n                <Line\n                    dot={false}\n                    type=\"monotone\"\n                    dataKey=\"pv\"\n                    stroke=\"#4318ff\"\n                />\n            </LineChart>\n        </ResponsiveContainer>\n    );\n}\n","/Users/jongwon/github/kingo/front/src/components/LatestBlocks.js",[],"/Users/jongwon/github/kingo/front/src/components/MyTransactionsAll.js",["137","138","139","140"],"import styled from \"styled-components\";\nimport kakaoTalk from \"../assets/kakaoTalk.png\";\nimport { HStack, Text } from \"@chakra-ui/layout\";\nimport { useState, useEffect } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport axios from 'axios';\n\nconst Table = styled.table`\n  width: 100%;\n`;\n\nconst Td = styled.td`\n  text-align: center;\n  padding: 5px;\n`;\n\nconst Th = styled.th`\n  font-weight: 800;\n  color: #4318ff;\n  text-align: center;\n  border-bottom: 2px solid #4318ff;\n`;\n\nconst Icon = styled.img`\n  src: ${(props) => props.src};\n  width: 20px;\n  margin-left: 10px;\n`;\n\nconst Time = styled.td`\n  color: #aeb4c4;\n  text-align: center;\n`;\n\n\nexport default function MyTransactionsAll() {\n  const [fromListState, setFromListState] = useState([\"Not Found\"]);\n  const [toListState, setToListState] = useState([\"Not Found\"]);\n  const [typeListState, setTypeListState] = useState([\"Not Found\"]);\n  const [valueListState, setValueListState] = useState([\"Not Found\"]);\n  const [dateListState, setDateListState] = useState([\"Not Found\"]);\n  const [hashListState, setHashListState] = useState([\"Not Found\"]);\n\n  const {account} = useWeb3React();\n\n  useEffect(() => {\n    const fromList = [];\n    const toList = [];\n    const typeList = [];\n    const valueList = [];\n    const dateList = [];\n    const hashList = [];\n    axios.get(\"http://localhost:5000/api/viewAll\").then(function(response){\n          console.log(response.data[1]._from);\n          for(let i = 1; i <= response.data.length; i++) {\n            if(response.data[i]?._from == account || response.data[i]?._to == account) {\n              fromList.push(response.data[i]._from);\n              toList.push(response.data[i]._to);\n              typeList.push(response.data[i]._type);\n              valueList.push(response.data[i]._point);\n              dateList.push(response.data[i]._date);\n              hashList.push(response.data[i]._hash);\n            }\n          }\n          setFromListState(fromList);\n          setToListState(toList);\n          setTypeListState(typeList);\n          setValueListState(valueList);\n          setDateListState(dateList);\n          setHashListState(hashList);\n        });\n    }, [])\n\n  const createTransactionTable = () => {\n    const displayedTable = [];\n    for(let i = 0; i < valueListState.length; i++) {\n      displayedTable.push(\n        <tr>\n          <Td>\n            <HStack justifyContent=\"center\">\n              <Icon src={kakaoTalk} />\n              <Text>kakaoPay</Text>\n            </HStack>\n          </Td>\n          <Time>{dateListState[i]}</Time>\n          <Td>{fromListState[i]}</Td>\n          <Td>{toListState[i]}</Td>\n          <Td>{valueListState[i]}</Td>\n          <Td>{hashListState[i]}</Td>\n        </tr>\n      )\n    }\n    return(\n      <Table>\n      <thead>\n        <tr>\n          <Th>플랫폼</Th>\n          <Th>시간</Th>\n          <Th>FROM</Th>\n          <Th>TO</Th>\n          <Th>금액</Th>\n          <Th>HASH</Th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {displayedTable}\n      </tbody>\n    </Table>\n    )\n  }\n\n  return (\n    <>\n      {createTransactionTable()}\n    </>\n  );\n}\n","/Users/jongwon/github/kingo/front/src/components/PointStatus.js",["141"],"/Users/jongwon/github/kingo/front/src/components/WalletConnect.js",[],"/Users/jongwon/github/kingo/front/src/components/LatestTransactions.js",["142","143","144"],"import { HStack, Text } from \"@chakra-ui/layout\";\nimport styled from \"styled-components\";\nimport kakaoTalk from \"../assets/kakaoTalk.png\";\nimport {useEffect, useState} from \"react\";\nimport axios from 'axios';\nconst Table = styled.table`\n  width: 100%;\n`;\n\nconst Td = styled.td`\n  text-align: center;\n  padding: 5px;\n`;\n\nconst Th = styled.th`\n  font-weight: 800;\n  color: #4318ff;\n  text-align: center;\n  border-bottom: 2px solid #4318ff;\n`;\n\nconst Icon = styled.img`\n  src: ${(props) => props.src};\n  width: 20px;\n  alt: \"kakao\";\n`;\n\nconst Time = styled.td`\n  color: #aeb4c4;\n  text-align: center;\n`;\n\nconst getRequest=(jsons)=>{\n  return{\n      method:'POST',\n      header:{\n          'Content-Type':'application/json',\n          \"Access-Control-Allow-Origin\":\"*\",\n          'Access-Control-Allow-Headers':\"*\"                \n      },\n      body:JSON.stringify(jsons)\n  }\n}\n\nexport default function LatestTransactions() {\n  const [tran, setTran] = useState();\n  // setTran(props.tran);\n    const [fromList, setFromListState] = useState([\"Not Found\"]);\n    const [toList, setToListState] = useState([\"Not Found\"]);\n    const [typeList, setTypeListState] = useState([\"Not Found\"]);\n    const [valueList, setValueListState] = useState([\"Not Found\"]);\n    const [dateList, setDateListState] = useState([\"Not Found\"]);\n    const [hashList, setHashListState] = useState([\"Not Found\"]);\n\n\n   \n     useEffect(() => {\n    const fromList = [];\n    const toList = [];\n    const typeList = [];\n    const valueList = [];\n    const dateList = [];\n    const hashList = [];\n    axios.get(\"http://localhost:5000/api/viewAll\").then(function(response){\n          console.log(response.data);\n          for(let i = 1; i <= response.data.length; i++) {\n              fromList.push(response.data[i]?._from);\n              toList.push(response.data[i]?._to);\n              typeList.push(response.data[i]?._type);\n              valueList.push(response.data[i]?._point);\n              dateList.push(response.data[i]?._date);\n              hashList.push(response.data[i]?._hash);\n          }\n          setFromListState(fromList);\n          setToListState(toList);\n          setTypeListState(typeList);\n          setValueListState(valueList);\n          setDateListState(dateList);\n          setHashListState(hashList);\n        });\n    }, [])\n\n\n\n  \n  const view = ()=>{\n    const result = [];\n    const realResult=[];\n    \n    realResult.push(\n    <thead>\n      <tr>\n        <Th>플랫폼</Th>\n        <Th>시간</Th>\n        <Th>FROM</Th>\n        <Th>TO</Th>\n        <Th>금액</Th>\n        <Th>HASH</Th>\n      </tr>\n    </thead>\n    );\n    console.log(typeof dateList)\n    if(typeof dateList === \"object\"){\n      for(let i=0;i<dateList.length;i++){\n        // console.log('asd');\n        result.push(\n          <tr>\n            <Td>\n              <HStack justifyContent=\"center\">\n                <Icon src={kakaoTalk} />\n                <Text>{typeList[i]}</Text>\n              </HStack>\n            </Td>\n            <Time>{dateList[i]}</Time>\n            <Td>{fromList[i]}...</Td>\n            <Td>{toList[i]}...</Td>\n            <Td>{valueList[i]}</Td>\n            <Td>{hashList[i]}</Td>\n          </tr>\n        )\n      }\n      console.log(result);\n    }\n    realResult.push(<tbody>{result}</tbody>);\n\n    return <Table>{realResult}</Table>\n  }\n  return (\n    <>\n      {view()}\n    </>\n  );\n}\n","/Users/jongwon/github/kingo/front/src/connector/index.js",[],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":2,"column":5,"nodeType":"151","messageId":"152","endLine":2,"endColumn":11},{"ruleId":"149","severity":1,"message":"153","line":3,"column":5,"nodeType":"151","messageId":"152","endLine":3,"endColumn":9},{"ruleId":"149","severity":1,"message":"154","line":4,"column":5,"nodeType":"151","messageId":"152","endLine":4,"endColumn":11},{"ruleId":"149","severity":1,"message":"155","line":6,"column":5,"nodeType":"151","messageId":"152","endLine":6,"endColumn":8},{"ruleId":"149","severity":1,"message":"156","line":7,"column":10,"nodeType":"151","messageId":"152","endLine":7,"endColumn":22},{"ruleId":"157","severity":1,"message":"158","line":36,"column":17,"nodeType":"159","messageId":"160","endLine":36,"endColumn":34},{"ruleId":"149","severity":1,"message":"161","line":4,"column":9,"nodeType":"151","messageId":"152","endLine":4,"endColumn":18},{"ruleId":"149","severity":1,"message":"162","line":4,"column":20,"nodeType":"151","messageId":"152","endLine":4,"endColumn":28},{"ruleId":"157","severity":1,"message":"158","line":25,"column":17,"nodeType":"159","messageId":"160","endLine":25,"endColumn":34},{"ruleId":"157","severity":1,"message":"158","line":52,"column":17,"nodeType":"159","messageId":"160","endLine":52,"endColumn":34},{"ruleId":"149","severity":1,"message":"155","line":6,"column":5,"nodeType":"151","messageId":"152","endLine":6,"endColumn":8},{"ruleId":"149","severity":1,"message":"163","line":11,"column":5,"nodeType":"151","messageId":"152","endLine":11,"endColumn":21},{"ruleId":"149","severity":1,"message":"164","line":12,"column":5,"nodeType":"151","messageId":"152","endLine":12,"endColumn":19},{"ruleId":"149","severity":1,"message":"165","line":22,"column":12,"nodeType":"151","messageId":"152","endLine":22,"endColumn":17},{"ruleId":"149","severity":1,"message":"166","line":22,"column":19,"nodeType":"151","messageId":"152","endLine":22,"endColumn":27},{"ruleId":"149","severity":1,"message":"167","line":82,"column":13,"nodeType":"151","messageId":"152","endLine":82,"endColumn":17},{"ruleId":"157","severity":1,"message":"158","line":132,"column":17,"nodeType":"159","messageId":"160","endLine":132,"endColumn":34},{"ruleId":"157","severity":1,"message":"158","line":172,"column":17,"nodeType":"159","messageId":"160","endLine":172,"endColumn":34},{"ruleId":"157","severity":1,"message":"158","line":208,"column":17,"nodeType":"159","messageId":"160","endLine":208,"endColumn":34},{"ruleId":"168","severity":1,"message":"169","line":24,"column":8,"nodeType":"170","endLine":24,"endColumn":10,"suggestions":"171"},{"ruleId":"149","severity":1,"message":"150","line":1,"column":18,"nodeType":"151","messageId":"152","endLine":1,"endColumn":24},{"ruleId":"168","severity":1,"message":"169","line":22,"column":8,"nodeType":"170","endLine":22,"endColumn":10,"suggestions":"172"},{"ruleId":"149","severity":1,"message":"155","line":3,"column":5,"nodeType":"151","messageId":"152","endLine":3,"endColumn":8},{"ruleId":"149","severity":1,"message":"173","line":38,"column":10,"nodeType":"151","messageId":"152","endLine":38,"endColumn":21},{"ruleId":"149","severity":1,"message":"174","line":38,"column":23,"nodeType":"151","messageId":"152","endLine":38,"endColumn":37},{"ruleId":"149","severity":1,"message":"175","line":39,"column":10,"nodeType":"151","messageId":"152","endLine":39,"endColumn":23},{"ruleId":"149","severity":1,"message":"176","line":48,"column":11,"nodeType":"151","messageId":"152","endLine":48,"endColumn":17},{"ruleId":"177","severity":1,"message":"178","line":55,"column":35,"nodeType":"179","messageId":"180","endLine":55,"endColumn":37},{"ruleId":"168","severity":1,"message":"181","line":70,"column":5,"nodeType":"170","endLine":70,"endColumn":7,"suggestions":"182"},{"ruleId":"149","severity":1,"message":"183","line":37,"column":10,"nodeType":"151","messageId":"152","endLine":37,"endColumn":23},{"ruleId":"149","severity":1,"message":"184","line":37,"column":25,"nodeType":"151","messageId":"152","endLine":37,"endColumn":41},{"ruleId":"149","severity":1,"message":"175","line":39,"column":10,"nodeType":"151","messageId":"152","endLine":39,"endColumn":23},{"ruleId":"149","severity":1,"message":"185","line":47,"column":11,"nodeType":"151","messageId":"152","endLine":47,"endColumn":19},{"ruleId":"177","severity":1,"message":"178","line":56,"column":40,"nodeType":"179","messageId":"180","endLine":56,"endColumn":42},{"ruleId":"168","severity":1,"message":"181","line":70,"column":8,"nodeType":"170","endLine":70,"endColumn":10,"suggestions":"186"},{"ruleId":"149","severity":1,"message":"162","line":1,"column":10,"nodeType":"151","messageId":"152","endLine":1,"endColumn":18},{"ruleId":"149","severity":1,"message":"187","line":7,"column":5,"nodeType":"151","messageId":"152","endLine":7,"endColumn":10},{"ruleId":"149","severity":1,"message":"188","line":8,"column":5,"nodeType":"151","messageId":"152","endLine":8,"endColumn":18},{"ruleId":"149","severity":1,"message":"175","line":39,"column":10,"nodeType":"151","messageId":"152","endLine":39,"endColumn":23},{"ruleId":"177","severity":1,"message":"178","line":56,"column":40,"nodeType":"179","messageId":"180","endLine":56,"endColumn":42},{"ruleId":"177","severity":1,"message":"178","line":56,"column":76,"nodeType":"179","messageId":"180","endLine":56,"endColumn":78},{"ruleId":"168","severity":1,"message":"181","line":72,"column":8,"nodeType":"170","endLine":72,"endColumn":10,"suggestions":"189"},{"ruleId":"168","severity":1,"message":"169","line":20,"column":8,"nodeType":"170","endLine":20,"endColumn":10,"suggestions":"190"},{"ruleId":"149","severity":1,"message":"191","line":33,"column":7,"nodeType":"151","messageId":"152","endLine":33,"endColumn":17},{"ruleId":"149","severity":1,"message":"192","line":46,"column":10,"nodeType":"151","messageId":"152","endLine":46,"endColumn":14},{"ruleId":"149","severity":1,"message":"193","line":46,"column":16,"nodeType":"151","messageId":"152","endLine":46,"endColumn":23},"no-native-reassign",["194"],"no-negated-in-lhs",["195"],"no-unused-vars","'HStack' is defined but never used.","Identifier","unusedVar","'Text' is defined but never used.","'VStack' is defined but never used.","'Box' is defined but never used.","'useWeb3React' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'useEffect' is defined but never used.","'useState' is defined but never used.","'FormErrorMessage' is defined but never used.","'FormHelperText' is defined but never used.","'input' is assigned a value but never used.","'setInput' is assigned a value but never used.","'hash' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'account' and 'pointArr'. Either include them or remove the dependency array. You can also do a functional update 'setPointArr(p => ...)' if you only need 'pointArr' in the 'setPointArr' call.","ArrayExpression",["196"],["197"],"'toListState' is assigned a value but never used.","'setToListState' is assigned a value but never used.","'typeListState' is assigned a value but never used.","'toList' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'account'. Either include it or remove the dependency array.",["198"],"'fromListState' is assigned a value but never used.","'setFromListState' is assigned a value but never used.","'fromList' is assigned a value but never used.",["199"],"'XAxis' is defined but never used.","'CartesianGrid' is defined but never used.",["200"],["201"],"'getRequest' is assigned a value but never used.","'tran' is assigned a value but never used.","'setTran' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"202","fix":"203"},{"desc":"202","fix":"204"},{"desc":"205","fix":"206"},{"desc":"205","fix":"207"},{"desc":"205","fix":"208"},{"desc":"202","fix":"209"},"Update the dependencies array to be: [account, pointArr]",{"range":"210","text":"211"},{"range":"212","text":"211"},"Update the dependencies array to be: [account]",{"range":"213","text":"214"},{"range":"215","text":"214"},{"range":"216","text":"214"},{"range":"217","text":"211"},[817,819],"[account, pointArr]",[804,806],[1990,1992],"[account]",[2049,2051],[2183,2185],[738,740]]