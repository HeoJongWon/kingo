[{"D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\index.js":"1","D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\App.js":"2","D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\components\\Navbar.js":"3","D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\library\\index.js":"4","D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\pages\\Login.js":"5","D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\pages\\DashBoard.js":"6","D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\pages\\AdminPage.js":"7","D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\pages\\AllTransactions.js":"8","D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\pages\\MyTransactions.js":"9","D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\components\\LatestBlocks.js":"10","D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\components\\WalletConnect.js":"11","D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\components\\PointStatus.js":"12","D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\components\\TotalPoint.js":"13","D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\components\\AccountInfo.js":"14","D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\components\\PointPieChart.js":"15","D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\components\\MyTransactionsAll.js":"16","D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\components\\LatestTransactions.js":"17","D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\components\\MyTransactionsSend.js":"18","D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\components\\TransactionsChart.js":"19","D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\components\\MyTransactionsReceive.js":"20","D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\connector\\index.js":"21","D:\\using_file\\co_op\\kingo\\front\\src\\index.js":"22","D:\\using_file\\co_op\\kingo\\front\\src\\App.js":"23","D:\\using_file\\co_op\\kingo\\front\\src\\components\\Navbar.js":"24","D:\\using_file\\co_op\\kingo\\front\\src\\library\\index.js":"25","D:\\using_file\\co_op\\kingo\\front\\src\\pages\\AdminPage.js":"26","D:\\using_file\\co_op\\kingo\\front\\src\\pages\\MyTransactions.js":"27","D:\\using_file\\co_op\\kingo\\front\\src\\pages\\Login.js":"28","D:\\using_file\\co_op\\kingo\\front\\src\\pages\\DashBoard.js":"29","D:\\using_file\\co_op\\kingo\\front\\src\\pages\\AllTransactions.js":"30","D:\\using_file\\co_op\\kingo\\front\\src\\components\\TransactionsChart.js":"31","D:\\using_file\\co_op\\kingo\\front\\src\\components\\WalletConnect.js":"32","D:\\using_file\\co_op\\kingo\\front\\src\\components\\MyTransactionsSend.js":"33","D:\\using_file\\co_op\\kingo\\front\\src\\components\\MyTransactionsAll.js":"34","D:\\using_file\\co_op\\kingo\\front\\src\\components\\PointStatus.js":"35","D:\\using_file\\co_op\\kingo\\front\\src\\components\\PointPieChart.js":"36","D:\\using_file\\co_op\\kingo\\front\\src\\components\\AccountInfo.js":"37","D:\\using_file\\co_op\\kingo\\front\\src\\components\\MyTransactionsReceive.js":"38","D:\\using_file\\co_op\\kingo\\front\\src\\components\\TotalPoint.js":"39","D:\\using_file\\co_op\\kingo\\front\\src\\components\\LatestTransactions.js":"40","D:\\using_file\\co_op\\kingo\\front\\src\\components\\LatestBlocks.js":"41","D:\\using_file\\co_op\\kingo\\front\\src\\connector\\index.js":"42"},{"size":513,"mtime":1640925398189,"results":"43","hashOfConfig":"44"},{"size":2123,"mtime":1641116665446,"results":"45","hashOfConfig":"44"},{"size":4882,"mtime":1640925398186,"results":"46","hashOfConfig":"44"},{"size":234,"mtime":1640925398190,"results":"47","hashOfConfig":"44"},{"size":139,"mtime":1640925398192,"results":"48","hashOfConfig":"44"},{"size":1007,"mtime":1640925398192,"results":"49","hashOfConfig":"44"},{"size":8546,"mtime":1640925398191,"results":"50","hashOfConfig":"44"},{"size":2392,"mtime":1640925398191,"results":"51","hashOfConfig":"44"},{"size":3046,"mtime":1640925398192,"results":"52","hashOfConfig":"44"},{"size":1052,"mtime":1640925398184,"results":"53","hashOfConfig":"44"},{"size":1347,"mtime":1640925398188,"results":"54","hashOfConfig":"44"},{"size":2483,"mtime":1640925398187,"results":"55","hashOfConfig":"44"},{"size":2133,"mtime":1640925710969,"results":"56","hashOfConfig":"44"},{"size":1695,"mtime":1640925398183,"results":"57","hashOfConfig":"44"},{"size":2584,"mtime":1640925398187,"results":"58","hashOfConfig":"44"},{"size":3245,"mtime":1640933080689,"results":"59","hashOfConfig":"44"},{"size":3577,"mtime":1640925418485,"results":"60","hashOfConfig":"44"},{"size":3057,"mtime":1640933090557,"results":"61","hashOfConfig":"44"},{"size":989,"mtime":1640925398188,"results":"62","hashOfConfig":"44"},{"size":3000,"mtime":1640933136537,"results":"63","hashOfConfig":"44"},{"size":280,"mtime":1640925398189,"results":"64","hashOfConfig":"44"},{"size":513,"mtime":1640925398189,"results":"65","hashOfConfig":"66"},{"size":2123,"mtime":1641116665446,"results":"67","hashOfConfig":"66"},{"size":4882,"mtime":1640925398186,"results":"68","hashOfConfig":"66"},{"size":234,"mtime":1640925398190,"results":"69","hashOfConfig":"66"},{"size":8546,"mtime":1640925398191,"results":"70","hashOfConfig":"66"},{"size":3046,"mtime":1640925398192,"results":"71","hashOfConfig":"66"},{"size":139,"mtime":1640925398192,"results":"72","hashOfConfig":"66"},{"size":1007,"mtime":1640925398192,"results":"73","hashOfConfig":"66"},{"size":2392,"mtime":1640925398191,"results":"74","hashOfConfig":"66"},{"size":989,"mtime":1640925398188,"results":"75","hashOfConfig":"66"},{"size":1347,"mtime":1640925398188,"results":"76","hashOfConfig":"66"},{"size":3057,"mtime":1640933090557,"results":"77","hashOfConfig":"66"},{"size":3245,"mtime":1640933080689,"results":"78","hashOfConfig":"66"},{"size":2320,"mtime":1641130621640,"results":"79","hashOfConfig":"66"},{"size":2584,"mtime":1640925398187,"results":"80","hashOfConfig":"66"},{"size":1695,"mtime":1640925398183,"results":"81","hashOfConfig":"66"},{"size":3000,"mtime":1640933136537,"results":"82","hashOfConfig":"66"},{"size":2133,"mtime":1640925710969,"results":"83","hashOfConfig":"66"},{"size":3577,"mtime":1640925418485,"results":"84","hashOfConfig":"66"},{"size":1052,"mtime":1640925398184,"results":"85","hashOfConfig":"66"},{"size":280,"mtime":1640925398189,"results":"86","hashOfConfig":"66"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"rkcgen",{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"89"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"89"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"89"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"89"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"89"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"89"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"89"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"89"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"89"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"89"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"89"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"89"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"89"},{"filePath":"141","messages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mb7esb",{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\index.js",[],["185","186"],"D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\App.js",[],"D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\components\\Navbar.js",[],"D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\library\\index.js",[],"D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\pages\\Login.js",[],"D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\pages\\DashBoard.js",["187","188","189","190"],"import {\r\n    HStack,\r\n    Text,\r\n    VStack,\r\n    Flex,\r\n    Box,\r\n    useMediaQuery,\r\n} from \"@chakra-ui/react\";\r\nimport TotalPoint from \"../components/TotalPoint\";\r\nimport PointStatus from \"../components/PointStatus\";\r\nimport PointPieChart from \"../components/PointPieChart\";\r\nimport AccountInfo from \"../components/AccountInfo\";\r\n\r\nfunction DashBoard() {\r\n    const [isLessThan1070] = useMediaQuery(\"(max-width:1070px)\");\r\n    return (\r\n        <Flex wrap=\"wrap\" w=\"full\" h=\"full\" justify=\"space-evenly\" bg=\"#E5E5E5\">\r\n            <Flex\r\n                flexGrow=\"1\"\r\n                justify=\"space-between\"\r\n                p={5}\r\n                wrap=\"wrap\"\r\n                minW=\"350px\"\r\n                w={isLessThan1070 ? \"full\" : \"60%\"}\r\n            >\r\n                <TotalPoint />\r\n                <PointStatus />\r\n                <AccountInfo />\r\n                <PointPieChart />\r\n                <PointStatus />\r\n            </Flex>\r\n        </Flex>\r\n    );\r\n}\r\n\r\nexport default DashBoard;\r\n","D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\pages\\AdminPage.js",["191","192","193","194","195","196","197","198","199"],"import {\r\n    Flex,\r\n    HStack,\r\n    Text,\r\n    VStack,\r\n    Box,\r\n    Input,\r\n    Button,\r\n    FormControl,\r\n    FormLabel,\r\n    FormErrorMessage,\r\n    FormHelperText,\r\n} from \"@chakra-ui/react\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport WalletConnect from \"../components/WalletConnect\";\r\nimport moment from \"moment\";\r\nimport {useState} from \"react\"\r\n\r\nfunction AdminPage() {\r\n    const { library, account } = useWeb3React();\r\n    const signer = library?.getSigner(account).connectUnchecked();\r\n    const [input, setInput] = useState([])\r\n\r\n    const handleCreateTransaction = (event) => {\r\n        const from = event.target.parentElement.parentElement.children[1].value\r\n        const to = event.target.parentElement.parentElement.children[3].value\r\n        const point = event.target.parentElement.parentElement.children[5].value\r\n        const type = event.target.parentElement.parentElement.children[7].value\r\n        const hash = event.target.parentElement.parentElement.children[9].value\r\n        let m = moment().format(\"YYYY.MM.DD\");\r\n        fetch(\"http://localhost:5000/api/createTx/\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n                \"Access-Control-Allow-Origin\":\"*\",\r\n                'Access-Control-Allow-Headers':\"*\"    \r\n            },\r\n            body:JSON.stringify({\r\n                from : from, \r\n                to : to,\r\n                point : point,\r\n                type : type,\r\n                date : m,\r\n                hash : hash,\r\n            })\r\n          }).then(res => {\r\n              if (res.ok){\r\n                console.log(\"Successfully added Transaction\");\r\n              }\r\n          }\r\n          )\r\n    };\r\n\r\n    const handleCreateUserInfo = (event) => {\r\n        /*console.log(event.target.parentElement.children[1].value);\r\n        console.log(event.target.parentElement.children[3].value);\r\n        console.log(event.target.parentElement.children[5].value);*/\r\n        const id = event.target.parentElement.children[1].value\r\n        const password = event.target.parentElement.children[3].value\r\n        const email = event.target.parentElement.children[5].value\r\n        fetch(\"http://localhost:5000/api/createUser/\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n                \"Access-Control-Allow-Origin\":\"*\",\r\n                'Access-Control-Allow-Headers':\"*\"    \r\n            },\r\n            body: JSON.stringify({\r\n              id: id,\r\n              password: password,\r\n              email: email,\r\n            })\r\n          }).then(res => {\r\n              if (res.ok){\r\n                console.log(\"Successfully added user\");\r\n              }\r\n          }\r\n          )            \r\n    };\r\n\r\n    const handleDemo = () => {\r\n        let hash;\r\n        let m = moment().format(\"YYYY.MM.DD\");\r\n        const message = JSON.stringify({\r\n            from: account,\r\n            to: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\r\n            point: 100,\r\n            type: \"A\",\r\n            date: m,\r\n        });\r\n\r\n        signer.signMessage(message).then((result) => (hash = result));\r\n        // 밑의 주석 이용하면 demo send 가능 \r\n        // const send_message = JSON.stringify({\r\n        //     from: account,\r\n        //     to: \"0xbBbBBBBbbBBBbbbBbbBbbbbBBbBbbbbBbBbbBBbB\",\r\n        //     type: \"A\",\r\n        //     value: 100,\r\n        // });\r\n        // signer.signMessage(send_message).then((result) => (hash = result));\r\n        // // 위의 hash 이용해서 Create transaction 보내면 됨\r\n        // fetch(\"http://localhost:5000/api/createTx/\", {\r\n        //     method:'POST',\r\n        //     header:{\r\n        //         'Content-Type':'application/json',\r\n        //         \"Access-Control-Allow-Origin\":\"*\",\r\n        //         'Access-Control-Allow-Headers':\"*\"                \r\n        //     },\r\n        //     body:JSON.send_message\r\n            \r\n        // }).then(() => {\r\n        //     console.log(\"added\");\r\n        // }\r\n        // )\r\n    };\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <Flex m={10} flexDirection=\"column\" w=\"full\">\r\n            <Text fontSize=\"3xl\" fontWeight=\"700\">\r\n                관리자 페이지\r\n            </Text>\r\n\r\n            <VStack\r\n                w=\"full\"\r\n                backgroundColor=\"white\"\r\n                borderRadius=\"5px\"\r\n                p={5}\r\n                marginTop={5}\r\n                borderRadius={20}\r\n            >\r\n                <HStack justifyContent=\"space-between\" w=\"full\">\r\n                    <Text color=\"#4318FF\" fontWeight={700} fontSize=\"lg\">\r\n                        트랜잭션 생성\r\n                    </Text>\r\n                </HStack>\r\n                <FormControl id=\"transaction-create\">\r\n                    <FormLabel>From</FormLabel>\r\n                    <Input placeholder=\"ex) Alice\" />\r\n                    <FormLabel>To</FormLabel>\r\n                    <Input placeholder=\"ex) Bob\" />\r\n                    <FormLabel>Point</FormLabel>\r\n                    <Input placeholder=\"ex) 300\" />\r\n                    <FormLabel>Type</FormLabel>\r\n                    <Input placeholder=\"ex) A\" />\r\n                    <FormLabel>Hash</FormLabel>\r\n                    <Input placeholder=\"Hash Value\" />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        onClick={handleCreateTransaction}\r\n                        h=\"40px\"\r\n                        borderRadius={20}\r\n                        w=\"200px\"\r\n                        bg=\"#4318FF\"\r\n                        color=\"white\"\r\n                        fontSize=\"sm\"\r\n                        fontWeight=\"bold\"\r\n                        mt={5}\r\n                    >\r\n                        <Text>트랜잭션 생성하기</Text>\r\n                    </Button>\r\n                </FormControl>\r\n            </VStack>\r\n            <VStack\r\n                w=\"full\"\r\n                backgroundColor=\"white\"\r\n                borderRadius=\"5px\"\r\n                p={5}\r\n                marginTop={5}\r\n                borderRadius={20}\r\n            >\r\n                <HStack justifyContent=\"space-between\" w=\"full\">\r\n                    <Text color=\"#4318FF\" fontWeight={700} fontSize=\"lg\">\r\n                        유저 정보 생성\r\n                    </Text>\r\n                </HStack>\r\n                <FormControl id=\"transaction-create\">\r\n                    <FormLabel>User ID</FormLabel>\r\n                    <Input placeholder=\"Enter user ID\" />\r\n                    <FormLabel>User Pw</FormLabel>\r\n                    <Input placeholder=\"Enter user Password\" />\r\n                    <FormLabel>User Email</FormLabel>\r\n                    <Input placeholder=\"Enter user Email\" />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        onClick={handleCreateUserInfo}\r\n                        h=\"40px\"\r\n                        borderRadius={20}\r\n                        w=\"200px\"\r\n                        bg=\"#4318FF\"\r\n                        color=\"white\"\r\n                        fontSize=\"sm\"\r\n                        fontWeight=\"bold\"\r\n                        mt={5}\r\n                    >\r\n                        <Text>유저 정보 생성하기</Text>\r\n                    </Button>\r\n                </FormControl>\r\n            </VStack>\r\n            <VStack\r\n                w=\"full\"\r\n                backgroundColor=\"white\"\r\n                borderRadius=\"5px\"\r\n                p={5}\r\n                marginTop={5}\r\n                borderRadius={20}\r\n                align=\"flex-start\"\r\n            >\r\n                <HStack justifyContent=\"space-between\" w=\"full\">\r\n                    <Text color=\"#4318FF\" fontWeight={700} fontSize=\"lg\">\r\n                        Demo\r\n                    </Text>\r\n                </HStack>\r\n                <Text fontSize=\"lg\">A에게 100포인트 보내기</Text>\r\n                <WalletConnect />\r\n                <Button\r\n                    type=\"submit\"\r\n                    onClick={handleDemo}\r\n                    h=\"40px\"\r\n                    borderRadius={20}\r\n                    w=\"200px\"\r\n                    bg=\"#4318FF\"\r\n                    color=\"white\"\r\n                    fontSize=\"sm\"\r\n                    fontWeight=\"bold\"\r\n                    mt={5}\r\n                >\r\n                    <Text>Demo 실행</Text>\r\n                </Button>\r\n            </VStack>\r\n        </Flex>\r\n    );\r\n}\r\n\r\nexport default AdminPage;","D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\pages\\AllTransactions.js",["200","201","202","203"],"import { Flex, HStack, Text, VStack, Box } from \"@chakra-ui/layout\";\r\nimport LatestBlock from \"../components/LatestBlocks\";\r\nimport LatestTransactions from \"../components/LatestTransactions\";\r\nimport {useEffect, useState} from 'react';\r\n\r\n\r\n\r\n\r\nfunction AllTransactions() {\r\n    \r\n    return (\r\n        <Flex m={10} flexDirection=\"column\" w=\"full\">\r\n            <Text fontSize=\"3xl\" fontWeight=\"700\">\r\n                전체 거래내역\r\n            </Text>\r\n\r\n            {/* 그래프 */}\r\n\r\n            <VStack\r\n                w=\"full\"\r\n                backgroundColor=\"white\"\r\n                borderRadius=\"5px\"\r\n                p={5}\r\n                marginTop={5}\r\n                borderRadius={20}\r\n            >\r\n                <HStack justifyContent=\"space-between\" w=\"full\">\r\n                    <Text color=\"#4318FF\" fontWeight={700} fontSize=\"lg\">\r\n                        Latest Blocks\r\n                    </Text>\r\n                    <Box\r\n                        as=\"button\"\r\n                        backgroundColor=\"#4318FF\"\r\n                        color=\"white\"\r\n                        borderRadius=\"3px\"\r\n                        width=\"60px\"\r\n                        fontWeight=\"bold\"\r\n                    >\r\n                        + More\r\n                    </Box>\r\n                </HStack>\r\n\r\n                <LatestBlock />\r\n            </VStack>\r\n\r\n            <VStack\r\n                w=\"full\"\r\n                backgroundColor=\"white\"\r\n                borderRadius=\"5px\"\r\n                p={5}\r\n                marginTop={5}\r\n                borderRadius={20}\r\n            >\r\n                <HStack justifyContent=\"space-between\" w=\"full\">\r\n                    <Text color=\"#4318FF\" fontWeight={700} fontSize=\"lg\">\r\n                        Latest Transaction\r\n                    </Text>\r\n                    <Box\r\n                        as=\"button\"\r\n                        backgroundColor=\"#4318FF\"\r\n                        color=\"white\"\r\n                        borderRadius=\"3px\"\r\n                        width=\"60px\"\r\n                        fontWeight=\"bold\"\r\n                    >\r\n                        + More\r\n                    </Box>\r\n                </HStack>\r\n\r\n                <LatestTransactions \r\n                />\r\n            </VStack>\r\n\r\n            {/* 거래내역 */}\r\n        </Flex>\r\n    );\r\n}\r\n\r\nexport default AllTransactions;\r\n","D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\pages\\MyTransactions.js",["204","205"],"import { Flex, HStack, Text, VStack, Box } from \"@chakra-ui/layout\";\r\nimport { useState } from \"react\";\r\nimport MyTransactionsAll from \"../components/MyTransactionsAll\";\r\nimport MyTransactionsSend from \"../components/MyTransactionsSend\";\r\nimport MyTransactionsReceive from \"../components/MyTransactionsReceive\";\r\nimport TransactionsChart from \"../components/TransactionsChart\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n\r\nfunction MySelect({ select }) {\r\n    if (select === 2) {\r\n        return <MyTransactionsReceive/>;\r\n    } else if (select === 1) {\r\n        return <MyTransactionsSend/>;\r\n    } else {\r\n        return <MyTransactionsAll/>;\r\n    }\r\n}\r\n\r\nfunction MyTransactions() {\r\n\r\n    const [index, setIndex] = useState(0);\r\n    \r\n\r\n    return (\r\n        <Flex m={10} flexDirection=\"column\" w=\"full\">\r\n            <Text fontSize=\"3xl\" fontWeight=\"700\">\r\n                My 거래내역\r\n            </Text>\r\n            <VStack\r\n                w=\"full\"\r\n                backgroundColor=\"white\"\r\n                borderRadius=\"5px\"\r\n                p={5}\r\n                marginBottom={5}\r\n                marginTop={5}\r\n                borderRadius={20}\r\n            >\r\n                <TransactionsChart />\r\n            </VStack>\r\n            <HStack>\r\n                <Box\r\n                    as=\"button\"\r\n                    backgroundColor={index === 0 ? \"#4318FF\" : \"white\"}\r\n                    color={index === 0 ? \"white\" : \"black\"}\r\n                    borderRadius=\"3px\"\r\n                    width=\"60px\"\r\n                    fontWeight=\"bold\"\r\n                    onClick={() => {\r\n                        setIndex(0);\r\n                    }}\r\n                >\r\n                    ALL\r\n                </Box>\r\n                <Box\r\n                    as=\"button\"\r\n                    backgroundColor={index === 1 ? \"#4318FF\" : \"white\"}\r\n                    color={index === 1 ? \"white\" : \"black\"}\r\n                    borderRadius=\"3px\"\r\n                    width=\"60px\"\r\n                    fontWeight=\"bold\"\r\n                    onClick={() => {\r\n                        setIndex(1);\r\n                    }}\r\n                >\r\n                    보낸 내역\r\n                </Box>\r\n                <Box\r\n                    as=\"button\"\r\n                    backgroundColor={index === 2 ? \"#4318FF\" : \"white\"}\r\n                    color={index === 2 ? \"white\" : \"black\"}\r\n                    borderRadius=\"3px\"\r\n                    width=\"60px\"\r\n                    fontWeight=\"bold\"\r\n                    onClick={() => {\r\n                        setIndex(2);\r\n                    }}\r\n                >\r\n                    받은 내역\r\n                </Box>\r\n            </HStack>\r\n\r\n            <VStack\r\n                w=\"full\"\r\n                backgroundColor=\"white\"\r\n                borderRadius={20}\r\n                p={5}\r\n                marginTop={5}\r\n            >\r\n                <MySelect select={index}/>\r\n            </VStack>\r\n        </Flex>\r\n    );\r\n}\r\n\r\nexport default MyTransactions;\r\n","D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\components\\LatestBlocks.js",[],"D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\components\\WalletConnect.js",[],"D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\components\\PointStatus.js",["206"],"import { VStack, HStack, Text, useMediaQuery } from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n\r\nconst getRequest=(jsons)=>{\r\n    return{\r\n        method:'POST',\r\n        header:{\r\n            'Content-Type':'application/json',\r\n            \"Access-Control-Allow-Origin\":\"*\",\r\n            'Access-Control-Allow-Headers':\"*\"                \r\n        },\r\n        body:JSON.stringify(jsons)\r\n    }\r\n}\r\n\r\nfunction PointStatus() {\r\n    const [pointArr, setPointArr] = useState([]);\r\n    const {account} = useWeb3React();\r\n\r\n    useEffect(() => {\r\n        //username를 생성하는 부분이 완성되면, 아래 fortest을 지우고 현재 로그인된 사용자의 username을 넣으면 됩니다. (성민)\r\n        let requestOpt = getRequest({\"username\":account});\r\n        fetch(\"http://localhost:5000/api/userInfo\", requestOpt)\r\n            .then((response) => response.json())\r\n            .then((jsons) => {\r\n                setPointArr(pointArr.concat(jsons.pointA,jsons.pointB,jsons.pointC,jsons.pointD));\r\n            });\r\n    }, [])\r\n\r\n    const [isLessThan1195] = useMediaQuery(\"(max-width:1195px)\");\r\n    return (\r\n        <VStack\r\n            borderRadius={15}\r\n            bg=\"white\"\r\n            p={10}\r\n            align=\"flex-start\"\r\n            h=\"355px\"\r\n            w={isLessThan1195 ? \"full\" : \"45%\"}\r\n            m={3}\r\n        >\r\n            <Text fontSize=\"3xl\" fontWeight=\"700\">\r\n                포인트 현황\r\n            </Text>\r\n            <VStack spacing={10} w=\"full\">\r\n                <HStack w=\"full\" justify=\"space-between\">\r\n                    <Text fontSize=\"lg\">Service A</Text>\r\n                    <Text fontSize=\"lg\">{pointArr[0]}</Text>\r\n                </HStack>\r\n                <HStack w=\"full\" justify=\"space-between\">\r\n                    <Text fontSize=\"lg\">Service B</Text>\r\n                    <Text fontSize=\"lg\">{pointArr[1]}</Text>\r\n                </HStack>\r\n                <HStack w=\"full\" justify=\"space-between\">\r\n                    <Text fontSize=\"lg\">Service C</Text>\r\n                    <Text fontSize=\"lg\">{pointArr[2]}</Text>\r\n                </HStack>\r\n                <HStack w=\"full\" justify=\"space-between\">\r\n                    <Text fontSize=\"lg\">Service D</Text>\r\n                    <Text fontSize=\"lg\">{pointArr[3]}</Text>\r\n                </HStack>\r\n            </VStack>\r\n        </VStack>\r\n    );\r\n}\r\n\r\nexport default PointStatus;\r\n","D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\components\\TotalPoint.js",["207"],"import { Text, HStack, Box, VStack } from \"@chakra-ui/react\";\r\nimport {useState, useEffect} from \"react\"\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n\r\n\r\nconst getRequest = (jsons) => {\r\n    return {\r\n        method: \"POST\",\r\n        header: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Headers\": \"*\",\r\n        },\r\n        body: JSON.stringify(jsons),\r\n    };\r\n};\r\n\r\nfunction TotalPoint() {\r\n    const [pointArr, setPointArr] = useState([]);\r\n    const {account} = useWeb3React();\r\n\r\n    useEffect(() => {\r\n        //username를 생성하는 부분이 완성되면, 아래 fortest을 지우고 현재 로그인된 사용자의 username을 넣으면 됩니다. (성민)\r\n        let requestOpt = getRequest({\"username\":account});\r\n        fetch(\"http://localhost:5000/api/userInfo\", requestOpt)\r\n            .then((response) => response.json())\r\n            .then((jsons) => {\r\n                setPointArr(pointArr.concat(jsons.pointA,jsons.pointB,jsons.pointC,jsons.pointD));\r\n            });\r\n    }, [])\r\n\r\n    const sumTotalPoint = () => {\r\n        let sumPoint = 0\r\n        for (let i = 0; i < pointArr.length; i++) {\r\n            sumPoint += pointArr[i]\r\n        }\r\n        return sumPoint\r\n    }\r\n\r\n    const sumPoint = sumTotalPoint()\r\n\r\n    return (\r\n        <VStack\r\n            justify=\"space-between\"\r\n            p={5}\r\n            m={3}\r\n            backgroundImage=\"linear-gradient(#532DFB,#868CFF)\"\r\n            w=\"full\"\r\n            h=\"204px\"\r\n            borderRadius={15}\r\n        >\r\n            <HStack w=\"full\" justify=\"space-between\">\r\n                <Text color=\"white\" fontWeight=\"700\" fontSize=\"3xl\">\r\n                    총 보유 포인트\r\n                </Text>\r\n                <Box />\r\n            </HStack>\r\n            <HStack w=\"full\" justify=\"space-between\">\r\n                <Box />\r\n                <Text color=\"white\" fontWeight=\"700\" fontSize=\"5xl\">\r\n                    {sumPoint} point\r\n                </Text>\r\n            </HStack>\r\n        </VStack>\r\n    );\r\n}\r\n\r\nexport default TotalPoint;\r\n","D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\components\\AccountInfo.js",["208"],"import {\r\n    VStack,\r\n    Box,\r\n    Flex,\r\n    Text,\r\n    Button,\r\n    Link,\r\n    useMediaQuery,\r\n    Tooltip,\r\n} from \"@chakra-ui/react\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n\r\nfunction AccountInfo() {\r\n    const [isLessThan1195] = useMediaQuery(\"(max-width:1195px)\");\r\n    const { account } = useWeb3React();\r\n    const parseAccount =\r\n        account &&\r\n        account?.substring(0, 10) + \"...\" + account?.substring(32, 40);\r\n\r\n    const etherscanAccount = \"https://etherscan.io/address/\" + account;\r\n\r\n    const parseAccountForColor = \"#\" + account?.substring(2, 8);\r\n    console.log(parseAccountForColor);\r\n    return (\r\n        <VStack\r\n            borderRadius={15}\r\n            bg=\"white\"\r\n            p={10}\r\n            h=\"355px\"\r\n            w={isLessThan1195 ? \"full\" : \"45%\"}\r\n            m={3}\r\n            justify=\"center\"\r\n            spacing={5}\r\n        >\r\n            <Flex\r\n                backgroundColor={parseAccountForColor}\r\n                borderRadius={100}\r\n                w=\"110px\"\r\n                h=\"110px\"\r\n                align=\"center\"\r\n                justify=\"center\"\r\n                fontFamily=\"'Pacifico', cursive\"\r\n                fontSize=\"3xl\"\r\n            >\r\n                {account?.substring(2, 6)}\r\n            </Flex>\r\n            <Text fontSize=\"lg\">내 지갑 주소 : </Text>\r\n            <Tooltip label={account}>\r\n                <Text>{parseAccount}</Text>\r\n            </Tooltip>\r\n            {account && (\r\n                <Button as={Link} isExternal href={etherscanAccount}>\r\n                    View on Etherscan\r\n                </Button>\r\n            )}\r\n        </VStack>\r\n    );\r\n}\r\n\r\nexport default AccountInfo;\r\n","D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\components\\PointPieChart.js",["209","210"],"import { VStack, HStack, Text, useMediaQuery } from \"@chakra-ui/react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { ResponsiveContainer, PieChart, Pie } from \"recharts\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n\r\nconst getRequest = (jsons) => {\r\n    return {\r\n        method: \"POST\",\r\n        header: {\r\n            \"Content-Type\": \"application/json\",\r\n            \"Access-Control-Allow-Origin\": \"*\",\r\n            \"Access-Control-Allow-Headers\": \"*\",\r\n        },\r\n        body: JSON.stringify(jsons),\r\n    };\r\n};\r\n\r\nfunction PointPieChart() {\r\n    const [pointArr, setPointArr] = useState([]);\r\n    const {account} = useWeb3React();\r\n\r\n    useEffect(() => {\r\n        //username를 생성하는 부분이 완성되면, 아래 fortest을 지우고 현재 로그인된 사용자의 username을 넣으면 됩니다. (성민)\r\n        let requestOpt = getRequest({\"username\":account});\r\n        fetch(\"http://localhost:5000/api/userInfo\", requestOpt)\r\n            .then((response) => response.json())\r\n            .then((jsons) => {\r\n                setPointArr(pointArr.concat(jsons.pointA,jsons.pointB,jsons.pointC,jsons.pointD));\r\n            });\r\n    }, [])\r\n\r\n    const data = [\r\n        {\r\n            name: \"Group A\",\r\n            value: pointArr[0],\r\n        },\r\n        {\r\n            name: \"Group B\",\r\n            value: pointArr[1],\r\n        },\r\n        {\r\n            name: \"Group C\",\r\n            value: pointArr[2],\r\n        },\r\n        {\r\n            name: \"Group D\",\r\n            value: pointArr[3],\r\n        },\r\n    ];\r\n\r\n    const [isLessThan1195] = useMediaQuery(\"(max-width:1195px)\");\r\n    return (\r\n        <VStack\r\n            borderRadius={15}\r\n            bg=\"white\"\r\n            p={10}\r\n            align=\"flex-start\"\r\n            h=\"355px\"\r\n            w={isLessThan1195 ? \"full\" : \"45%\"}\r\n            m={3}\r\n        >\r\n            <Text fontSize=\"3xl\" fontWeight=\"700\">\r\n                포인트 비율\r\n            </Text>\r\n            <ResponsiveContainer width=\"95%\" height={180} debounce={1}>\r\n                <PieChart width={730} height={250}>\r\n                    <Pie\r\n                        data={data}\r\n                        dataKey=\"value\"\r\n                        nameKey=\"name\"\r\n                        cx=\"50%\"\r\n                        cy=\"50%\"\r\n                        innerRadius={60}\r\n                        outerRadius={80}\r\n                        fill=\"#82ca9d\"\r\n                    />\r\n                </PieChart>\r\n            </ResponsiveContainer>\r\n        </VStack>\r\n    );\r\n}\r\n\r\nexport default PointPieChart;\r\n","D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\components\\MyTransactionsAll.js",["211","212","213","214"],"import styled from \"styled-components\";\r\nimport kakaoTalk from \"../assets/kakaoTalk.png\";\r\nimport { HStack, Text } from \"@chakra-ui/layout\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport axios from 'axios';\r\n\r\nconst Table = styled.table`\r\n  width: 100%;\r\n`;\r\n\r\nconst Td = styled.td`\r\n  text-align: center;\r\n  padding: 5px;\r\n`;\r\n\r\nconst Th = styled.th`\r\n  font-weight: 800;\r\n  color: #4318ff;\r\n  text-align: center;\r\n  border-bottom: 2px solid #4318ff;\r\n`;\r\n\r\nconst Icon = styled.img`\r\n  src: ${(props) => props.src};\r\n  width: 20px;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Time = styled.td`\r\n  color: #aeb4c4;\r\n  text-align: center;\r\n`;\r\n\r\n\r\nexport default function MyTransactionsAll() {\r\n  const [fromListState, setFromListState] = useState([\"Not Found\"]);\r\n  const [toListState, setToListState] = useState([\"Not Found\"]);\r\n  const [typeListState, setTypeListState] = useState([\"Not Found\"]);\r\n  const [valueListState, setValueListState] = useState([\"Not Found\"]);\r\n  const [dateListState, setDateListState] = useState([\"Not Found\"]);\r\n  const [hashListState, setHashListState] = useState([\"Not Found\"]);\r\n\r\n  const {account} = useWeb3React();\r\n\r\n  useEffect(() => {\r\n    const fromList = [];\r\n    const toList = [];\r\n    const typeList = [];\r\n    const valueList = [];\r\n    const dateList = [];\r\n    const hashList = [];\r\n    axios.post(\"http://localhost:5000/api/viewAll\").then(function(response){\r\n          console.log(response.data);\r\n          for(let i = 1; i <= Object.keys(response.data).length; i++) {\r\n            if(response.data[i].from == account || response.data[i].to == account) {\r\n              fromList.push(response.data[i].from);\r\n              toList.push(response.data[i].to);\r\n              typeList.push(response.data[i].type);\r\n              valueList.push(response.data[i].value);\r\n              dateList.push(response.data[i].create_date);\r\n              hashList.push(response.data[i].hash);\r\n            }\r\n          }\r\n          setFromListState(fromList);\r\n          setToListState(toList);\r\n          setTypeListState(typeList);\r\n          setValueListState(valueList);\r\n          setDateListState(dateList);\r\n          setHashListState(hashList);\r\n        });\r\n    }, [])\r\n\r\n  const createTransactionTable = () => {\r\n    const displayedTable = [];\r\n    for(let i = 0; i < valueListState.length; i++) {\r\n      displayedTable.push(\r\n        <tr>\r\n          <Td>\r\n            <HStack justifyContent=\"center\">\r\n              <Icon src={kakaoTalk} />\r\n              <Text>kakaoPay</Text>\r\n            </HStack>\r\n          </Td>\r\n          <Time>{dateListState[i]}</Time>\r\n          <Td>{fromListState[i]}</Td>\r\n          <Td>{toListState[i]}</Td>\r\n          <Td>{valueListState[i]}</Td>\r\n          <Td>{hashListState[i]}</Td>\r\n        </tr>\r\n      )\r\n    }\r\n    return(\r\n      <Table>\r\n      <thead>\r\n        <tr>\r\n          <Th>플랫폼</Th>\r\n          <Th>시간</Th>\r\n          <Th>FROM</Th>\r\n          <Th>TO</Th>\r\n          <Th>금액</Th>\r\n          <Th>HASH</Th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {displayedTable}\r\n      </tbody>\r\n    </Table>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {createTransactionTable()}\r\n    </>\r\n  );\r\n}\r\n","D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\components\\LatestTransactions.js",["215","216"],"import { HStack, Text } from \"@chakra-ui/layout\";\r\nimport styled from \"styled-components\";\r\nimport kakaoTalk from \"../assets/kakaoTalk.png\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\nconst Table = styled.table`\r\n  width: 100%;\r\n`;\r\n\r\nconst Td = styled.td`\r\n  text-align: center;\r\n  padding: 5px;\r\n`;\r\n\r\nconst Th = styled.th`\r\n  font-weight: 800;\r\n  color: #4318ff;\r\n  text-align: center;\r\n  border-bottom: 2px solid #4318ff;\r\n`;\r\n\r\nconst Icon = styled.img`\r\n  src: ${(props) => props.src};\r\n  width: 20px;\r\n  alt: \"kakao\";\r\n`;\r\n\r\nconst Time = styled.td`\r\n  color: #aeb4c4;\r\n  text-align: center;\r\n`;\r\n\r\nconst getRequest=(jsons)=>{\r\n  return{\r\n      method:'POST',\r\n      header:{\r\n          'Content-Type':'application/json',\r\n          \"Access-Control-Allow-Origin\":\"*\",\r\n          'Access-Control-Allow-Headers':\"*\"                \r\n      },\r\n      body:JSON.stringify(jsons)\r\n  }\r\n}\r\n\r\nexport default function LatestTransactions() {\r\n  const [tran, setTran] = useState();\r\n  // setTran(props.tran);\r\n    const [fromList, setFromListState] = useState([\"Not Found\"]);\r\n    const [toList, setToListState] = useState([\"Not Found\"]);\r\n    const [typeList, setTypeListState] = useState([\"Not Found\"]);\r\n    const [valueList, setValueListState] = useState([\"Not Found\"]);\r\n    const [dateList, setDateListState] = useState([\"Not Found\"]);\r\n    const [hashList, setHashListState] = useState([\"Not Found\"]);\r\n\r\n    useEffect(() => {\r\n        const fromList = [];\r\n        const toList = [];\r\n        const typeList = [];\r\n        const valueList = [];\r\n        const dateList = [];\r\n        const hashList = [];\r\n        const requestOpt = getRequest();\r\n        fetch(\"http://localhost:5000/api/viewAll\", requestOpt)\r\n            .then((response) => response.json())\r\n            .then((jsons) => {\r\n            console.log(jsons);\r\n            for(let i = 1; i <= Object.keys(jsons).length; i++) {\r\n            \r\n            fromList.push(jsons[i].from);\r\n            toList.push(jsons[i].to);\r\n            typeList.push(jsons[i].type);\r\n            valueList.push(jsons[i].value);\r\n            dateList.push(jsons[i].create_date);\r\n            hashList.push(jsons[i].hash);\r\n            \r\n            }\r\n            setFromListState(fromList);\r\n            setToListState(toList);\r\n            setTypeListState(typeList);\r\n            setValueListState(valueList);\r\n            setDateListState(dateList);\r\n            setHashListState(hashList);\r\n        });\r\n    }, [])\r\n\r\n  \r\n  const view = ()=>{\r\n    const result = [];\r\n    const realResult=[];\r\n    \r\n    realResult.push(\r\n    <thead>\r\n      <tr>\r\n        <Th>플랫폼</Th>\r\n        <Th>시간</Th>\r\n        <Th>FROM</Th>\r\n        <Th>TO</Th>\r\n        <Th>금액</Th>\r\n        <Th>HASH</Th>\r\n      </tr>\r\n    </thead>\r\n    );\r\n    console.log(typeof dateList)\r\n    if(typeof dateList === \"object\"){\r\n      for(let i=0;i<dateList.length;i++){\r\n        // console.log('asd');\r\n        result.push(\r\n          <tr>\r\n            <Td>\r\n              <HStack justifyContent=\"center\">\r\n                <Icon src={kakaoTalk} />\r\n                <Text>{typeList[i]}</Text>\r\n              </HStack>\r\n            </Td>\r\n            <Time>{dateList[i]}</Time>\r\n            <Td>{fromList[i]}...</Td>\r\n            <Td>{toList[i]}...</Td>\r\n            <Td>{valueList[i]}</Td>\r\n            <Td>{hashList[i]}</Td>\r\n          </tr>\r\n        )\r\n      }\r\n      console.log(result);\r\n    }\r\n    realResult.push(<tbody>{result}</tbody>);\r\n\r\n    return <Table>{realResult}</Table>\r\n  }\r\n  return (\r\n    <>\r\n      {view()}\r\n    </>\r\n  );\r\n}\r\n","D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\components\\MyTransactionsSend.js",["217","218","219","220","221","222"],"import styled from \"styled-components\";\r\nimport kakaoTalk from \"../assets/kakaoTalk.png\";\r\nimport { HStack, Text } from \"@chakra-ui/layout\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport axios from 'axios';\r\n\r\nconst Table = styled.table`\r\n  width: 100%;\r\n`;\r\n\r\nconst Td = styled.td`\r\n  text-align: center;\r\n  padding: 5px;\r\n`;\r\n\r\nconst Th = styled.th`\r\n  font-weight: 800;\r\n  color: #4318ff;\r\n  text-align: center;\r\n  border-bottom: 2px solid #4318ff;\r\n`;\r\n\r\nconst Icon = styled.img`\r\n  src: ${(props) => props.src};\r\n  width: 20px;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Time = styled.td`\r\n  color: #aeb4c4;\r\n  text-align: center;\r\n`;\r\n\r\n\r\nexport default function MyTransactionsAll() {\r\n  const [fromListState, setFromListState] = useState([\"Not Found\"]);\r\n  const [toListState, setToListState] = useState([\"Not Found\"]);\r\n  const [typeListState, setTypeListState] = useState([\"Not Found\"]);\r\n  const [valueListState, setValueListState] = useState([\"Not Found\"]);\r\n  const [dateListState, setDateListState] = useState([\"Not Found\"]);\r\n  const [hashListState, setHashListState] = useState([\"Not Found\"]);\r\n  \r\n  const {account} = useWeb3React();\r\n\r\n  useEffect(() => {\r\n    const fromList = [];\r\n    const toList = [];\r\n    const typeList = [];\r\n    const valueList = [];\r\n    const dateList = [];\r\n    const hashList = [];\r\n    axios.post(\"http://localhost:5000/api/viewAll\").then(function(response){\r\n          console.log(response.data);\r\n          for(let i = 1; i <= Object.keys(response.data).length; i++) {\r\n            if(response.data[i].from == account) {\r\n              toList.push(response.data[i].to);\r\n              typeList.push(response.data[i].type);\r\n              valueList.push(response.data[i].value);\r\n              dateList.push(response.data[i].create_date);\r\n              hashList.push(response.data[i].hash);\r\n            }\r\n          }\r\n          setToListState(toList);\r\n          setTypeListState(typeList);\r\n          setValueListState(valueList);\r\n          setDateListState(dateList);\r\n          setHashListState(hashList);\r\n        });\r\n    }, [])\r\n\r\n  const createTransactionTable = () => {\r\n    const displayedTable = [];\r\n    for(let i = 0; i < valueListState.length; i++) {\r\n      displayedTable.push(\r\n        <tr>\r\n          <Td>\r\n            <HStack justifyContent=\"center\">\r\n              <Icon src={kakaoTalk} />\r\n              <Text>kakaoPay</Text>\r\n            </HStack>\r\n          </Td>\r\n          <Time>{dateListState[i]}</Time>\r\n          <Td>{toListState[i]}</Td>\r\n          <Td>{valueListState[i]}</Td>\r\n          <Td>{hashListState[i]}</Td>\r\n        </tr>\r\n      )\r\n    }\r\n    return(\r\n      <Table>\r\n      <thead>\r\n        <tr>\r\n          <Th>플랫폼</Th>\r\n          <Th>시간</Th>\r\n          <Th>TO</Th>\r\n          <Th>금액</Th>\r\n          <Th>HASH</Th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {displayedTable}\r\n      </tbody>\r\n    </Table>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {createTransactionTable()}\r\n    </>\r\n  );\r\n}\r\n","D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\components\\TransactionsChart.js",["223","224","225"],"import { useState } from \"react\";\r\nimport {\r\n    LineChart,\r\n    Line,\r\n    Tooltip,\r\n    YAxis,\r\n    XAxis,\r\n    CartesianGrid,\r\n    ResponsiveContainer,\r\n} from \"recharts\";\r\nimport data from \"../assets/data.json\";\r\n\r\nexport default function TransactionsChart() {\r\n    return (\r\n        <ResponsiveContainer width=\"95%\" height={180} debounce={1}>\r\n            <LineChart\r\n                data={data}\r\n                margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n            >\r\n                <YAxis />\r\n                <Tooltip\r\n                    itemStyle={{ fontSize: \"5px\" }}\r\n                    contentStyle={{ fontSize: \"0px\" }}\r\n                    wrapperStyle={{ padding: 0, border: \"none\" }}\r\n                />\r\n                <Line\r\n                    dot={false}\r\n                    type=\"monotone\"\r\n                    dataKey=\"pv\"\r\n                    stroke=\"#4318ff\"\r\n                />\r\n            </LineChart>\r\n        </ResponsiveContainer>\r\n    );\r\n}\r\n","D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\components\\MyTransactionsReceive.js",["226","227","228","229","230","231"],"import styled from \"styled-components\";\r\nimport kakaoTalk from \"../assets/kakaoTalk.png\";\r\nimport { HStack, Text } from \"@chakra-ui/layout\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport axios from 'axios';\r\n\r\nconst Table = styled.table`\r\n  width: 100%;\r\n`;\r\n\r\nconst Td = styled.td`\r\n  text-align: center;\r\n  padding: 5px;\r\n`;\r\n\r\nconst Th = styled.th`\r\n  font-weight: 800;\r\n  color: #4318ff;\r\n  text-align: center;\r\n  border-bottom: 2px solid #4318ff;\r\n`;\r\n\r\nconst Icon = styled.img`\r\n  src: ${(props) => props.src};\r\n  width: 20px;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Time = styled.td`\r\n  color: #aeb4c4;\r\n  text-align: center;\r\n`;\r\n\r\n\r\nexport default function MyTransactionsAll() {\r\n  const [fromListState, setFromListState] = useState([\"Not Found\"]);\r\n  const [toListState, setToListState] = useState([\"Not Found\"]);\r\n  const [typeListState, setTypeListState] = useState([\"Not Found\"]);\r\n  const [valueListState, setValueListState] = useState([\"Not Found\"]);\r\n  const [dateListState, setDateListState] = useState([\"Not Found\"]);\r\n  const [hashListState, setHashListState] = useState([\"Not Found\"]);\r\n\r\n  const {account} = useWeb3React();\r\n\r\n  useEffect(() =>{\r\n    const fromList = [];\r\n    const toList = [];\r\n    const typeList = [];\r\n    const valueList = [];\r\n    const dateList = [];\r\n    const hashList = [];\r\n    axios.post(\"http://localhost:5000/api/viewAll\").then(function(response){\r\n      for (let i = 1; i <= Object.keys(response.data).length; i++) {\r\n        if (response.data[i].to == account) {\r\n          console.log(response.data);\r\n          fromList.push(response.data[i].from);\r\n          typeList.push(response.data[i].type);\r\n          valueList.push(response.data[i].value);\r\n          dateList.push(response.data[i].create_date);\r\n          hashList.push(response.data[i].hash);\r\n        }\r\n      }\r\n      setFromListState(fromList);\r\n      setTypeListState(typeList);\r\n      setValueListState(valueList);\r\n      setDateListState(dateList);\r\n      setHashListState(hashList)\r\n    }) \r\n  },[])\r\n  const createTransactionTable = () => {\r\n    const displayedTable = [];\r\n    for(let i = 0; i < valueListState.length; i++) {\r\n      displayedTable.push(\r\n        <tr>\r\n          <Td>\r\n            <HStack justifyContent=\"center\">\r\n              <Icon src={kakaoTalk} />\r\n              <Text>kakaoPay</Text>\r\n            </HStack>\r\n          </Td>\r\n          <Time>{dateListState[i]}</Time>\r\n          <Td>{fromListState[i]}</Td>\r\n          <Td>{valueListState[i]}</Td>\r\n          <Td>{hashListState[i]}</Td>\r\n        </tr>\r\n      )\r\n    }\r\n    return(\r\n      <Table>\r\n      <thead>\r\n        <tr>\r\n          <Th>플랫폼</Th>\r\n          <Th>시간</Th>\r\n          <Th>FROM</Th>\r\n          <Th>금액</Th>\r\n          <Th>HASH</Th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {displayedTable}\r\n      </tbody>\r\n    </Table>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {createTransactionTable()}\r\n    </>\r\n  );\r\n}\r\n","D:\\using_file\\kingo\\skkrypto-nft\\pybo\\src\\connector\\index.js",[],"D:\\using_file\\co_op\\kingo\\front\\src\\index.js",[],"D:\\using_file\\co_op\\kingo\\front\\src\\App.js",[],"D:\\using_file\\co_op\\kingo\\front\\src\\components\\Navbar.js",[],"D:\\using_file\\co_op\\kingo\\front\\src\\library\\index.js",[],"D:\\using_file\\co_op\\kingo\\front\\src\\pages\\AdminPage.js",["232","233","234","235","236","237","238","239","240"],"D:\\using_file\\co_op\\kingo\\front\\src\\pages\\MyTransactions.js",["241","242"],"D:\\using_file\\co_op\\kingo\\front\\src\\pages\\Login.js",[],"D:\\using_file\\co_op\\kingo\\front\\src\\pages\\DashBoard.js",["243","244","245","246"],"D:\\using_file\\co_op\\kingo\\front\\src\\pages\\AllTransactions.js",["247","248","249","250"],"D:\\using_file\\co_op\\kingo\\front\\src\\components\\TransactionsChart.js",["251","252","253"],"D:\\using_file\\co_op\\kingo\\front\\src\\components\\WalletConnect.js",[],"D:\\using_file\\co_op\\kingo\\front\\src\\components\\MyTransactionsSend.js",["254","255","256","257","258","259"],"D:\\using_file\\co_op\\kingo\\front\\src\\components\\MyTransactionsAll.js",["260","261","262","263"],"D:\\using_file\\co_op\\kingo\\front\\src\\components\\PointStatus.js",["264"],"D:\\using_file\\co_op\\kingo\\front\\src\\components\\PointPieChart.js",["265","266"],"D:\\using_file\\co_op\\kingo\\front\\src\\components\\AccountInfo.js",["267"],"D:\\using_file\\co_op\\kingo\\front\\src\\components\\MyTransactionsReceive.js",["268","269","270","271","272","273"],"D:\\using_file\\co_op\\kingo\\front\\src\\components\\TotalPoint.js",["274"],"D:\\using_file\\co_op\\kingo\\front\\src\\components\\LatestTransactions.js",["275","276"],"D:\\using_file\\co_op\\kingo\\front\\src\\components\\LatestBlocks.js",[],"D:\\using_file\\co_op\\kingo\\front\\src\\connector\\index.js",[],{"ruleId":"277","replacedBy":"278"},{"ruleId":"279","replacedBy":"280"},{"ruleId":"281","severity":1,"message":"282","line":2,"column":5,"nodeType":"283","messageId":"284","endLine":2,"endColumn":11},{"ruleId":"281","severity":1,"message":"285","line":3,"column":5,"nodeType":"283","messageId":"284","endLine":3,"endColumn":9},{"ruleId":"281","severity":1,"message":"286","line":4,"column":5,"nodeType":"283","messageId":"284","endLine":4,"endColumn":11},{"ruleId":"281","severity":1,"message":"287","line":6,"column":5,"nodeType":"283","messageId":"284","endLine":6,"endColumn":8},{"ruleId":"281","severity":1,"message":"287","line":6,"column":5,"nodeType":"283","messageId":"284","endLine":6,"endColumn":8},{"ruleId":"281","severity":1,"message":"288","line":11,"column":5,"nodeType":"283","messageId":"284","endLine":11,"endColumn":21},{"ruleId":"281","severity":1,"message":"289","line":12,"column":5,"nodeType":"283","messageId":"284","endLine":12,"endColumn":19},{"ruleId":"281","severity":1,"message":"290","line":22,"column":12,"nodeType":"283","messageId":"284","endLine":22,"endColumn":17},{"ruleId":"281","severity":1,"message":"291","line":22,"column":19,"nodeType":"283","messageId":"284","endLine":22,"endColumn":27},{"ruleId":"281","severity":1,"message":"292","line":82,"column":13,"nodeType":"283","messageId":"284","endLine":82,"endColumn":17},{"ruleId":"293","severity":1,"message":"294","line":132,"column":17,"nodeType":"295","messageId":"296","endLine":132,"endColumn":34},{"ruleId":"293","severity":1,"message":"294","line":172,"column":17,"nodeType":"295","messageId":"296","endLine":172,"endColumn":34},{"ruleId":"293","severity":1,"message":"294","line":208,"column":17,"nodeType":"295","messageId":"296","endLine":208,"endColumn":34},{"ruleId":"281","severity":1,"message":"297","line":4,"column":9,"nodeType":"283","messageId":"284","endLine":4,"endColumn":18},{"ruleId":"281","severity":1,"message":"298","line":4,"column":20,"nodeType":"283","messageId":"284","endLine":4,"endColumn":28},{"ruleId":"293","severity":1,"message":"294","line":25,"column":17,"nodeType":"295","messageId":"296","endLine":25,"endColumn":34},{"ruleId":"293","severity":1,"message":"294","line":52,"column":17,"nodeType":"295","messageId":"296","endLine":52,"endColumn":34},{"ruleId":"281","severity":1,"message":"299","line":7,"column":10,"nodeType":"283","messageId":"284","endLine":7,"endColumn":22},{"ruleId":"293","severity":1,"message":"294","line":36,"column":17,"nodeType":"295","messageId":"296","endLine":36,"endColumn":34},{"ruleId":"300","severity":1,"message":"301","line":29,"column":8,"nodeType":"302","endLine":29,"endColumn":10,"suggestions":"303"},{"ruleId":"300","severity":1,"message":"301","line":30,"column":8,"nodeType":"302","endLine":30,"endColumn":10,"suggestions":"304"},{"ruleId":"281","severity":1,"message":"287","line":3,"column":5,"nodeType":"283","messageId":"284","endLine":3,"endColumn":8},{"ruleId":"281","severity":1,"message":"282","line":1,"column":18,"nodeType":"283","messageId":"284","endLine":1,"endColumn":24},{"ruleId":"300","severity":1,"message":"301","line":30,"column":8,"nodeType":"302","endLine":30,"endColumn":10,"suggestions":"305"},{"ruleId":"281","severity":1,"message":"306","line":39,"column":10,"nodeType":"283","messageId":"284","endLine":39,"endColumn":23},{"ruleId":"307","severity":1,"message":"308","line":56,"column":38,"nodeType":"309","messageId":"310","endLine":56,"endColumn":40},{"ruleId":"307","severity":1,"message":"308","line":56,"column":72,"nodeType":"309","messageId":"310","endLine":56,"endColumn":74},{"ruleId":"300","severity":1,"message":"311","line":72,"column":8,"nodeType":"302","endLine":72,"endColumn":10,"suggestions":"312"},{"ruleId":"281","severity":1,"message":"313","line":46,"column":10,"nodeType":"283","messageId":"284","endLine":46,"endColumn":14},{"ruleId":"281","severity":1,"message":"314","line":46,"column":16,"nodeType":"283","messageId":"284","endLine":46,"endColumn":23},{"ruleId":"281","severity":1,"message":"315","line":37,"column":10,"nodeType":"283","messageId":"284","endLine":37,"endColumn":23},{"ruleId":"281","severity":1,"message":"316","line":37,"column":25,"nodeType":"283","messageId":"284","endLine":37,"endColumn":41},{"ruleId":"281","severity":1,"message":"306","line":39,"column":10,"nodeType":"283","messageId":"284","endLine":39,"endColumn":23},{"ruleId":"281","severity":1,"message":"317","line":47,"column":11,"nodeType":"283","messageId":"284","endLine":47,"endColumn":19},{"ruleId":"307","severity":1,"message":"308","line":56,"column":38,"nodeType":"309","messageId":"310","endLine":56,"endColumn":40},{"ruleId":"300","severity":1,"message":"311","line":70,"column":8,"nodeType":"302","endLine":70,"endColumn":10,"suggestions":"318"},{"ruleId":"281","severity":1,"message":"298","line":1,"column":10,"nodeType":"283","messageId":"284","endLine":1,"endColumn":18},{"ruleId":"281","severity":1,"message":"319","line":7,"column":5,"nodeType":"283","messageId":"284","endLine":7,"endColumn":10},{"ruleId":"281","severity":1,"message":"320","line":8,"column":5,"nodeType":"283","messageId":"284","endLine":8,"endColumn":18},{"ruleId":"281","severity":1,"message":"321","line":38,"column":10,"nodeType":"283","messageId":"284","endLine":38,"endColumn":21},{"ruleId":"281","severity":1,"message":"322","line":38,"column":23,"nodeType":"283","messageId":"284","endLine":38,"endColumn":37},{"ruleId":"281","severity":1,"message":"306","line":39,"column":10,"nodeType":"283","messageId":"284","endLine":39,"endColumn":23},{"ruleId":"281","severity":1,"message":"323","line":48,"column":11,"nodeType":"283","messageId":"284","endLine":48,"endColumn":17},{"ruleId":"307","severity":1,"message":"308","line":55,"column":33,"nodeType":"309","messageId":"310","endLine":55,"endColumn":35},{"ruleId":"300","severity":1,"message":"311","line":70,"column":5,"nodeType":"302","endLine":70,"endColumn":7,"suggestions":"324"},{"ruleId":"281","severity":1,"message":"287","line":6,"column":5,"nodeType":"283","messageId":"284","endLine":6,"endColumn":8},{"ruleId":"281","severity":1,"message":"288","line":11,"column":5,"nodeType":"283","messageId":"284","endLine":11,"endColumn":21},{"ruleId":"281","severity":1,"message":"289","line":12,"column":5,"nodeType":"283","messageId":"284","endLine":12,"endColumn":19},{"ruleId":"281","severity":1,"message":"290","line":22,"column":12,"nodeType":"283","messageId":"284","endLine":22,"endColumn":17},{"ruleId":"281","severity":1,"message":"291","line":22,"column":19,"nodeType":"283","messageId":"284","endLine":22,"endColumn":27},{"ruleId":"281","severity":1,"message":"292","line":82,"column":13,"nodeType":"283","messageId":"284","endLine":82,"endColumn":17},{"ruleId":"293","severity":1,"message":"294","line":132,"column":17,"nodeType":"295","messageId":"296","endLine":132,"endColumn":34},{"ruleId":"293","severity":1,"message":"294","line":172,"column":17,"nodeType":"295","messageId":"296","endLine":172,"endColumn":34},{"ruleId":"293","severity":1,"message":"294","line":208,"column":17,"nodeType":"295","messageId":"296","endLine":208,"endColumn":34},{"ruleId":"281","severity":1,"message":"299","line":7,"column":10,"nodeType":"283","messageId":"284","endLine":7,"endColumn":22},{"ruleId":"293","severity":1,"message":"294","line":36,"column":17,"nodeType":"295","messageId":"296","endLine":36,"endColumn":34},{"ruleId":"281","severity":1,"message":"282","line":2,"column":5,"nodeType":"283","messageId":"284","endLine":2,"endColumn":11},{"ruleId":"281","severity":1,"message":"285","line":3,"column":5,"nodeType":"283","messageId":"284","endLine":3,"endColumn":9},{"ruleId":"281","severity":1,"message":"286","line":4,"column":5,"nodeType":"283","messageId":"284","endLine":4,"endColumn":11},{"ruleId":"281","severity":1,"message":"287","line":6,"column":5,"nodeType":"283","messageId":"284","endLine":6,"endColumn":8},{"ruleId":"281","severity":1,"message":"297","line":4,"column":9,"nodeType":"283","messageId":"284","endLine":4,"endColumn":18},{"ruleId":"281","severity":1,"message":"298","line":4,"column":20,"nodeType":"283","messageId":"284","endLine":4,"endColumn":28},{"ruleId":"293","severity":1,"message":"294","line":25,"column":17,"nodeType":"295","messageId":"296","endLine":25,"endColumn":34},{"ruleId":"293","severity":1,"message":"294","line":52,"column":17,"nodeType":"295","messageId":"296","endLine":52,"endColumn":34},{"ruleId":"281","severity":1,"message":"298","line":1,"column":10,"nodeType":"283","messageId":"284","endLine":1,"endColumn":18},{"ruleId":"281","severity":1,"message":"319","line":7,"column":5,"nodeType":"283","messageId":"284","endLine":7,"endColumn":10},{"ruleId":"281","severity":1,"message":"320","line":8,"column":5,"nodeType":"283","messageId":"284","endLine":8,"endColumn":18},{"ruleId":"281","severity":1,"message":"315","line":37,"column":10,"nodeType":"283","messageId":"284","endLine":37,"endColumn":23},{"ruleId":"281","severity":1,"message":"316","line":37,"column":25,"nodeType":"283","messageId":"284","endLine":37,"endColumn":41},{"ruleId":"281","severity":1,"message":"306","line":39,"column":10,"nodeType":"283","messageId":"284","endLine":39,"endColumn":23},{"ruleId":"281","severity":1,"message":"317","line":47,"column":11,"nodeType":"283","messageId":"284","endLine":47,"endColumn":19},{"ruleId":"307","severity":1,"message":"308","line":56,"column":38,"nodeType":"309","messageId":"310","endLine":56,"endColumn":40},{"ruleId":"300","severity":1,"message":"311","line":70,"column":8,"nodeType":"302","endLine":70,"endColumn":10,"suggestions":"325"},{"ruleId":"281","severity":1,"message":"306","line":39,"column":10,"nodeType":"283","messageId":"284","endLine":39,"endColumn":23},{"ruleId":"307","severity":1,"message":"308","line":56,"column":38,"nodeType":"309","messageId":"310","endLine":56,"endColumn":40},{"ruleId":"307","severity":1,"message":"308","line":56,"column":72,"nodeType":"309","messageId":"310","endLine":56,"endColumn":74},{"ruleId":"300","severity":1,"message":"311","line":72,"column":8,"nodeType":"302","endLine":72,"endColumn":10,"suggestions":"326"},{"ruleId":"300","severity":1,"message":"301","line":28,"column":8,"nodeType":"302","endLine":28,"endColumn":10,"suggestions":"327"},{"ruleId":"281","severity":1,"message":"282","line":1,"column":18,"nodeType":"283","messageId":"284","endLine":1,"endColumn":24},{"ruleId":"300","severity":1,"message":"301","line":30,"column":8,"nodeType":"302","endLine":30,"endColumn":10,"suggestions":"328"},{"ruleId":"281","severity":1,"message":"287","line":3,"column":5,"nodeType":"283","messageId":"284","endLine":3,"endColumn":8},{"ruleId":"281","severity":1,"message":"321","line":38,"column":10,"nodeType":"283","messageId":"284","endLine":38,"endColumn":21},{"ruleId":"281","severity":1,"message":"322","line":38,"column":23,"nodeType":"283","messageId":"284","endLine":38,"endColumn":37},{"ruleId":"281","severity":1,"message":"306","line":39,"column":10,"nodeType":"283","messageId":"284","endLine":39,"endColumn":23},{"ruleId":"281","severity":1,"message":"323","line":48,"column":11,"nodeType":"283","messageId":"284","endLine":48,"endColumn":17},{"ruleId":"307","severity":1,"message":"308","line":55,"column":33,"nodeType":"309","messageId":"310","endLine":55,"endColumn":35},{"ruleId":"300","severity":1,"message":"311","line":70,"column":5,"nodeType":"302","endLine":70,"endColumn":7,"suggestions":"329"},{"ruleId":"300","severity":1,"message":"301","line":30,"column":8,"nodeType":"302","endLine":30,"endColumn":10,"suggestions":"330"},{"ruleId":"281","severity":1,"message":"313","line":46,"column":10,"nodeType":"283","messageId":"284","endLine":46,"endColumn":14},{"ruleId":"281","severity":1,"message":"314","line":46,"column":16,"nodeType":"283","messageId":"284","endLine":46,"endColumn":23},"no-native-reassign",["331"],"no-negated-in-lhs",["332"],"no-unused-vars","'HStack' is defined but never used.","Identifier","unusedVar","'Text' is defined but never used.","'VStack' is defined but never used.","'Box' is defined but never used.","'FormErrorMessage' is defined but never used.","'FormHelperText' is defined but never used.","'input' is assigned a value but never used.","'setInput' is assigned a value but never used.","'hash' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'useEffect' is defined but never used.","'useState' is defined but never used.","'useWeb3React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'account' and 'pointArr'. Either include them or remove the dependency array. You can also do a functional update 'setPointArr(p => ...)' if you only need 'pointArr' in the 'setPointArr' call.","ArrayExpression",["333"],["334"],["335"],"'typeListState' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'account'. Either include it or remove the dependency array.",["336"],"'tran' is assigned a value but never used.","'setTran' is assigned a value but never used.","'fromListState' is assigned a value but never used.","'setFromListState' is assigned a value but never used.","'fromList' is assigned a value but never used.",["337"],"'XAxis' is defined but never used.","'CartesianGrid' is defined but never used.","'toListState' is assigned a value but never used.","'setToListState' is assigned a value but never used.","'toList' is assigned a value but never used.",["338"],["339"],["340"],["341"],["342"],["343"],["344"],"no-global-assign","no-unsafe-negation",{"desc":"345","fix":"346"},{"desc":"345","fix":"347"},{"desc":"345","fix":"348"},{"desc":"349","fix":"350"},{"desc":"349","fix":"351"},{"desc":"349","fix":"352"},{"desc":"349","fix":"353"},{"desc":"349","fix":"354"},{"desc":"345","fix":"355"},{"desc":"345","fix":"356"},{"desc":"349","fix":"357"},{"desc":"345","fix":"358"},"Update the dependencies array to be: [account, pointArr]",{"range":"359","text":"360"},{"range":"361","text":"360"},{"range":"362","text":"360"},"Update the dependencies array to be: [account]",{"range":"363","text":"364"},{"range":"365","text":"364"},{"range":"366","text":"364"},{"range":"367","text":"364"},{"range":"368","text":"364"},{"range":"369","text":"360"},{"range":"370","text":"360"},{"range":"371","text":"364"},{"range":"372","text":"360"},[1036,1038],"[account, pointArr]",[1023,1025],[1101,1103],[2256,2258],"[account]",[2132,2134],[2073,2075],[2132,2134],[2256,2258],[947,949],[1101,1103],[2073,2075],[1023,1025]]